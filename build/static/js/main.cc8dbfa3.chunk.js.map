{"version":3,"sources":["variables/random.js","actions/actionConstants.js","views/utils/index.js","views/Dashboard.js","actions/dashboardAction.js","actions/modalAction.js","views/income/index.js","actions/incomeActions.js","views/assets/index.js","actions/assetsAcction.js","views/creditors/index.js","actions/creditorActions.js","views/expenditure/index.js","actions/expenditureActions.js","views/utils/notification.js","views/cashFlow/index.js","actions/cashFlowAction.js","views/newWorth/index.js","actions/netWorthAction.js","routes.js","components/Navbars/Navbar.js","components/Sidebar/Sidebar.js","actions/authAction.js","components/Footer/Footer.js","views/utils/forms/assets.js","views/utils/forms/income.js","views/utils/forms/expenditure.js","views/utils/forms/creditors.js","views/utils/modal.js","views/utils/loader.js","views/profile/index.js","layouts/Admin.js","actions/customerAction.js","views/auth/header.js","views/auth/loginForm.js","views/auth/login.js","views/auth/registerForm.js","views/auth/termsCondition.js","views/auth/register.js","views/auth/resetpwd/resetpwdForm.js","views/auth/resetpwd/resetPwd.js","redux/reducers/modalReducer.js","redux/reducers/authReducer.js","redux/reducers/default.js","redux/reducers/assetsReduder.js","redux/reducers/incomeReducer.js","redux/reducers/expenditureReducer.js","redux/reducers/creditorReducer.js","redux/reducers/typeReducer.js","redux/reducers/netWorthReducer.js","redux/reducers/cashFlowReducer.js","redux/reducers/dashboardReducer.js","redux/reducers/customerReducer.js","redux/reducers/index.js","redux/sagas/auth.js","redux/services/serviceUtils.js","redux/sagas/assets.js","redux/sagas/income.js","redux/sagas/expenditure.js","redux/sagas/creditor.js","redux/sagas/types.js","redux/sagas/netWorth.js","redux/sagas/cashFlow.js","redux/sagas/dashboard.js","redux/sagas/customer.js","redux/sagas/index.js","redux/store.js","index.js","redux/services/env.js","logo-gray.png"],"names":["randomNum","min","max","random","number","LOADING_START","LOADING_END","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","isNaN","negativeSign","i","parseInt","Number","toFixed","toString","j","length","substr","replace","slice","e","console","log","colors","Dashboard","genDNChartData","datasets","data","backgroundColor","labels","getAssetsData","assets","result","values","forEach","item","assetTypeName","balance","includes","push","Object","label","getIncomeData","income","incomeTypeName","netAmount","getDebtData","creditor","getExpenditureData","expenditure","expenditureTypeName","borderColor","borderWidth","getPersonalNetWorthData","netWorth","personalNetWorthProgress","keys","fill","lineTension","getCashflowData","cashFlow","dates","sort","map","endingCash","getDebtReductionData","creditorTypeName","creditLimit","originalLoanAmount","this","props","getDashboardData","colorInfo","status","personalNetWorth","assetsData","incomeData","debtData","expenditureData","netWorthData","cashFlowData","debtReductionData","debtReductionDataKeys","className","Row","Col","xs","md","Card","CardHeader","CardBody","options","tooltips","callbacks","tooltipItem","dataset","percent","round","CardFooter","legend","display","scales","yAxes","ticks","beginAtZero","maintainAspectRatio","element","xLabel","key","match","join","c","toUpperCase","index","Progress","animated","color","value","React","Component","propsTypes","PropTypes","object","isRequired","func","mapDispatchToProps","type","DashboardMapped","connect","state","DashBoard","ToggleModal","title","Income","toggleModal","editField","deleteItem","id","swal","icon","buttons","dangerMode","then","willDelete","deleteIncome","modal","getIncome","types","filter","x","category","error","activeData","tablebody","company","date","onClick","incomeId","Button","Table","hover","IncomeMapped","Assets","deleteAssets","getAssets","institution","assetId","AssetsMapped","Creditors","deleteCreditor","getCreditor","parseFloat","apr","payment","marketValue","yearsToPayOff","proxy","creditorId","CreditorsMapped","Expenditure","deleteExpenditure","getExpenditure","expense","expenditureId","ExpenditureMapped","createNotification","message","time","NotificationManager","info","success","warning","CashFlow","changeViewMode","mode","setState","viewMode","genLineData","moreData","onChange","preventDefault","target","name","onSubmit","endDate","startDate","getCashFlow","notify","viewAll","tableData","el","temp","a","b","Date","tableboday","Badge","Form","FormGroup","Input","ButtonGroup","active","start","end","CashFlowMapped","NetWorth","getNetWorth","total","investments","cashAndEquivalents","Liabilities","assetBalance","creditBalance","totalAssets","borderless","dashRoutes","path","component","layout","Header","isOpen","dropdownOpen","sidebarToggle","createRef","toggle","dropdownToggle","getBrand","routes","prop","collapse","views","location","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","window","innerWidth","Logout","logout","addEventListener","bind","history","indexOf","Navbar","expand","Container","fluid","ref","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","Dropdown","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","tag","ps","mappedHeader","Footer","default","src","grayLogo","alt","width","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","logo","pro","to","activeClassName","AssetsModalForm","editMode","optionData","selected","assetType","defaultValue","placeholder","IncomeModalForm","incomeType","ExpenditureModalForm","expenditureType","CreditorModalForm","changeForm","creditorType","timesLateOptionData","numberOfTimesLate","dateData","creditCard","numberOfYearsPaying","ModalComponent","currentState","selectModal","toLowerCase","editData","selectAction","createAssets","editAssets","editIncome","createIncome","createExpenditure","editExpenditure","createCreditor","editCreditor","asset","action","limit","entry","form","Modal","show","ModalBody","mappedModalComponent","DarkBackground","styled","div","disappear","css","Loader","spinner","ProfilePage","password","user","updateProfile","editCustomer","changePwd","confirm","customerId","newPassword","oldPassword","customer","getCustomer","firstName","lastName","htmlFor","email","required","disabled","mappedProfilePage","mainPanel","handleColorClick","body","scrollTop","scrollingElement","from","loading","mappedDashboard","authHeader","LoginForm","login","notification","responseGoogle","response","profileObj","username","responseFacebook","nextProps","isLoading","errors","style","mappedLoginForm","auth","Login","RegisterForm","confirmPassword","checkPassword","register","checkTerms","agreement","checked","str","test","givenName","familyName","validPass","showTerms","clearErr","mappedRegisterForm","TermsAndCondition","backToSignUp","Register","ResetpwdForm","resetpwd","mappedResetpwdForm","ResetPwd","initialState","combineReducers","payload","authActionWatcher","authApi","endpoint","config","method","url","env","BASE_URL","headers","JSON","stringify","axios","catch","err","call","token","localStorage","setItem","put","removeItem","showMessage","takeLatest","takeEvery","ServiceUtils","getItem","parse","get","deleteAsset","editAsset","assetsActionWatcher","service","serviceUtls","ApiGET","ApiPOST","ApiDELETE","ApiPUT","getIncomes","IncomesActionWatcher","deleteexpenditure","editexpenditure","ExpenditureActionWatcher","deletecreditor","editcreditor","CreditorActionWatcher","getTypes","typesActionWatcher","NetWorthActionWatcher","CashFlowActionWatcher","DashboardActionWatcher","customerActionWatcher","actionWatcher","rootSaga","select","all","incomeActionWatcher","expenditureActionWatcher","creditorActionWatcher","CustomerActionWatcher","middleWare","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","hist","createBrowserHistory","ReactDOM","render","Admin","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cc8dbfa3.chunk.js","sourcesContent":["import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};","//Default\nexport const LOADING_START = 'LOADING_START';\nexport const LOADING_END = 'LOADING_END';\n\n// Modal\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\n//Auth\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\nexport const RESET_PWD_REQUEST = 'RESET_PWD_REQUEST';\nexport const RESET_PWD_SUCCESS = 'RESET_PWD_SUCCESS';\nexport const RESET_PWD_FAILED = 'RESET_PWD_FAILED';\nexport const LOGOUT = 'LOGOUT';\nexport const CLRERR = 'CLRERR'\n\n//assets\nexport const GET_ASSETS_REQUEST = 'GET_ASSETS_REQUEST';\nexport const GET_ASSETS_SUCCESS = 'GET_ASSETS_SUCCESS';\nexport const GET_ASSETS_FAILED = 'GET_ASSETS_FAILED';\n\nexport const CREATE_ASSETS_REQUEST = 'CREATE_ASSETS_REQUEST';\nexport const CREATE_ASSETS_SUCCESS = 'CREATE_ASSETS_SUCCESS';\nexport const CREATE_ASSETS_FAILED = 'CREATE_ASSETS_FAILED';\n\nexport const EDIT_ASSETS_REQUEST = 'EDIT_ASSETS_REQUEST';\nexport const EDIT_ASSETS_SUCCESS = 'EDIT_ASSETS_SUCCESS';\nexport const EDIT_ASSETS_FAILED = 'EDIT_ASSETS_FAILED';\n\nexport const DELETE_ASSETS_REQUEST = 'DELETE_ASSETS_REQUEST';\nexport const DELETE_ASSETS_SUCCESS = 'DELETE_ASSETS_SUCCESS';\nexport const DELETE_ASSETS_FAILED = 'DELETE_ASSETS_FAILED';\n\n// Income\nexport const GET_INCOME_REQUEST = 'GET_INCOME_REQUEST';\nexport const GET_INCOME_SUCCESS = 'GET_INCOME_SUCCESS';\nexport const GET_INCOME_FAILED = 'GET_INCOME_FAILED';\n\nexport const CREATE_INCOME_REQUEST = 'CREATE_INCOME_REQUEST';\nexport const CREATE_INCOME_SUCCESS = 'CREATE_INCOME_SUCCESS';\nexport const CREATE_INCOME_FAILED = 'CREATE_INCOME_FAILED';\n\nexport const EDIT_INCOME_REQUEST = 'EDIT_INCOME_REQUEST';\nexport const EDIT_INCOME_SUCCESS = 'EDIT_INCOME_SUCCESS';\nexport const EDIT_INCOME_FAILED = 'EDIT_INCOME_FAILED';\n\nexport const DELETE_INCOME_REQUEST = 'DELETE_INCOME_REQUEST';\nexport const DELETE_INCOME_SUCCESS = 'DELETE_INCOME_SUCCESS';\nexport const DELETE_INCOME_FAILED = 'DELETE_INCOME_FAILED';\n\n\n// expenditure\nexport const GET_EXPENDITURE_REQUEST = 'GET_EXPENDITURE_REQUEST';\nexport const GET_EXPENDITURE_SUCCESS = 'GET_EXPENDITURE_SUCCESS';\nexport const GET_EXPENDITURE_FAILED = 'GET_EXPENDITURE_FAILED';\n\nexport const CREATE_EXPENDITURE_REQUEST = 'CREATE_EXPENDITURE_REQUEST';\nexport const CREATE_EXPENDITURE_SUCCESS = 'CREATE_EXPENDITURE_SUCCESS';\nexport const CREATE_EXPENDITURE_FAILED = 'CREATE_EXPENDITURE_FAILED';\n\nexport const EDIT_EXPENDITURE_REQUEST = 'EDIT_EXPENDITURE_REQUEST';\nexport const EDIT_EXPENDITURE_SUCCESS = 'EDIT_EXPENDITURE_SUCCESS';\nexport const EDIT_EXPENDITURE_FAILED = 'EDIT_EXPENDITURE_FAILED';\n\nexport const DELETE_EXPENDITURE_REQUEST = 'DELETE_EXPENDITURE_REQUEST';\nexport const DELETE_EXPENDITURE_SUCCESS = 'DELETE_EXPENDITURE_SUCCESS';\nexport const DELETE_EXPENDITURE_FAILED = 'DELETE_EXPENDITURE_FAILED';\n\n// Creditor\nexport const GET_CREDITOR_REQUEST = 'GET_CREDITOR_REQUEST';\nexport const GET_CREDITOR_SUCCESS = 'GET_CREDITOR_SUCCESS';\nexport const GET_CREDITOR_FAILED = 'GET_CREDITOR_FAILED';\n\nexport const CREATE_CREDITOR_REQUEST = 'CREATE_CREDITOR_REQUEST';\nexport const CREATE_CREDITOR_SUCCESS = 'CREATE_CREDITOR_SUCCESS';\nexport const CREATE_CREDITOR_FAILED = 'CREATE_CREDITOR_FAILED';\n\nexport const EDIT_CREDITOR_REQUEST = 'EDIT_CREDITOR_REQUEST';\nexport const EDIT_CREDITOR_SUCCESS = 'EDIT_CREDITOR_SUCCESS';\nexport const EDIT_CREDITOR_FAILED = 'EDIT_CREDITOR_FAILED';\n\nexport const DELETE_CREDITOR_REQUEST = 'DELETE_CREDITOR_REQUEST';\nexport const DELETE_CREDITOR_SUCCESS = 'DELETE_CREDITOR_SUCCESS';\nexport const DELETE_CREDITOR_FAILED = 'DELETE_CREDITOR_FAILED';\n\n//GET Types\nexport const GET_TYPES_REQUEST = 'GET_TYPES_REQUEST';\nexport const GET_TYPES_SUCCESS = 'GET_TYPES_SUCCESS';\nexport const GET_TYPES_FAILED = 'GET_TYPES_FAILED';\n\n//GET NetWorth\nexport const GET_NET_WORTH_REQUEST = 'GET_NET_WORTH_REQUEST';\nexport const GET_NET_WORTH_SUCCESS = 'GET_NET_WORTH_SUCCESS';\nexport const GET_NET_WORTH_FAILED = 'GET_NET_WORTH_FAILED';\n\n//GET Cash Flow\nexport const GET_CASH_FLOW_REQUEST = 'GET_CASH_FLOW_REQUEST';\nexport const GET_CASH_FLOW_SUCCESS = 'GET_CASH_FLOW_SUCCESS';\nexport const GET_CASH_FLOW_FAILED = 'GET_CASH_FLOW_FAILED';\n\n//GET Dashboard\nexport const GET_DASHBOARD_DATA_REQUEST = 'GET_DASHBOARD_DATA_REQUEST';\nexport const GET_DASHBOARD_DATA_SUCCESS = 'GET_DASHBOARD_DATA_SUCCESS';\nexport const GET_DASHBOARD_DATA_FAILED = 'GET_DASHBOARD_DATA_FAILED';\n\n//Dashboard\nexport const GET_CUSTOMER_REQUEST = 'GET_CUSTOMER_REQUEST';\nexport const GET_CUSTOMER_SUCCESS = 'GET_CUSTOMER_SUCCESS';\nexport const GET_CUSTOMER_FAILED = 'GET_CUSTOMER_FAILED';\n\nexport const EDIT_CUSTOMER_REQUEST = 'EDIT_CUSTOMER_REQUEST';\nexport const EDIT_CUSTOMER_SUCCESS = 'EDIT_CUSTOMER_SUCCESS';\nexport const EDIT_CUSTOMER_FAILED = 'EDIT_CUSTOMER_FAILED';","const formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n        decimalCount = Math.abs(decimalCount);\n        decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n        const negativeSign = amount < 0 ? \"-\" : \"\";\n\n        let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n        let j = (i.length > 3) ? i.length % 3 : 0;\n\n        return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport default formatMoney","import React from \"react\";\n// react plugin used to create charts\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport { randomNum } from 'variables/random';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Progress,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getDashboardData } from 'actions/dashboardAction';\nimport formatMoney from 'views/utils';\nconst colors = [\n  'blue',\n  'purple',\n  'orange',\n  'green',\n  'pink',\n  'yellow',\n  'cyan',\n  'info',\n  'indigo',\n  'gray',\n  'secondary',\n  'dark',\n  'teal'\n];\n\nclass Dashboard extends React.Component {\n\n  genDNChartData = () => {\n    return {\n      datasets: [\n        {\n          data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum()],\n          backgroundColor: colors,\n          // label: 'Sieres 1',\n        },\n      ],\n      labels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5'],\n    };\n  };\n  UNSAFE_componentWillMount() {\n    this.props.getDashboardData();\n  }\n  getAssetsData = (assets) => {\n    let { result } = assets;\n    let labels = [];\n    let values = {};\n    result.forEach(item => {\n      let { assetTypeName, balance } = item;\n      if (!labels.includes(assetTypeName)) {\n        labels.push(assetTypeName);\n        values[assetTypeName] = balance\n      } else {\n        values[assetTypeName] += balance\n      }\n    })\n    return {\n      datasets: [\n        {\n          data: Object.values(values),\n          backgroundColor: colors,\n          label: 'Cash and Assets',\n        },\n      ],\n      labels: labels,\n    };\n  }\n  getIncomeData = (income) => {\n    let { result } = income;\n    let labels = [];\n    let values = {};\n    result.forEach(item => {\n      let { incomeTypeName, netAmount } = item;\n      if (!labels.includes(incomeTypeName)) {\n        labels.push(incomeTypeName);\n        values[incomeTypeName] = netAmount\n      } else {\n        values[incomeTypeName] += netAmount\n      }\n    })\n    return {\n      datasets: [\n        {\n          data: Object.values(values),\n          backgroundColor: colors,\n          label: 'Total Income',\n        },\n      ],\n      labels: labels,\n    };\n  }\n  getDebtData = (creditor) => {\n    let { result } = creditor;\n    if (!result) result = [];\n    let labels = [];\n    let values = [];\n    result.forEach(item => {\n      let { creditor, balance } = item;\n      labels.push(creditor);\n      values.push(balance);\n    })\n    return {\n      datasets: [\n        {\n          data: values,\n          backgroundColor: colors,\n          label: 'Total DEBT',\n        },\n      ],\n      labels: labels,\n    }\n  }\n  getExpenditureData = (expenditure) => {\n    let { result } = expenditure\n    let labels = [];\n    let values = {};\n    result.forEach(item => {\n      let { expenditureTypeName, amount } = item;\n      if (!labels.includes(expenditureTypeName)) {\n        labels.push(expenditureTypeName);\n        values[expenditureTypeName] = amount\n      } else {\n        values[expenditureTypeName] += amount\n      }\n    });\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Monthly Expenditure',\n          backgroundColor: '#0d1182',\n          borderColor: '#0d1182',\n          borderWidth: 1,\n          data: Object.values(values),\n        },\n      ],\n    };\n  };\n  getPersonalNetWorthData = (netWorth) => {\n    let { result } = netWorth;\n    if (result) {\n      let { personalNetWorthProgress } = result;\n      return {\n        labels: Object.keys(personalNetWorthProgress),\n        datasets: [\n          {\n            label: 'Personal Net Worth',\n            backgroundColor: '#b0b1ea',\n            borderColor: '#0d1182',\n            borderWidth: 1,\n            data: Object.values(personalNetWorthProgress),\n            fill: true,\n            lineTension: 0,\n          },\n        ],\n      };\n    }\n    return {\n      labels: [],\n      datasets: [\n        {\n          label: 'Personal Net Worth',\n          backgroundColor: '#b0b1ea',\n          borderColor: '#0d1182',\n          borderWidth: 1,\n          data: [],\n          fill: true,\n          lineTension: 0,\n        },\n      ],\n    };\n\n  }\n  getCashflowData = (cashFlow) => {\n    let { result } = cashFlow\n    let dates = result ? Object.keys(result) : [];\n    dates.sort();\n    let values = dates.map(item => (result[item].endingCash))\n    return {\n      labels: dates,\n      datasets: [\n        {\n          label: 'Cash Flow',\n          backgroundColor: 'pink',\n          borderColor: '#d60163d4',\n          borderWidth: 1,\n          data: values,\n          fill: true,\n          lineTension: 0,\n        },\n      ],\n\n    };\n  }\n  getDebtReductionData = (creditor) => {\n    let { result } = creditor;\n    if (!result) result = [];\n    let values = {};\n    result.forEach(item => {\n      let { creditorTypeName, creditLimit, balance, originalLoanAmount } = item;\n      if (values[creditorTypeName]) {\n        if (creditorTypeName === 'Credit Card') {\n          values[creditorTypeName].balance += balance;\n          values[creditorTypeName].creditLimit += creditLimit;\n        } else {\n          values[creditorTypeName].balance += balance;\n          values[creditorTypeName].originalLoanAmount += originalLoanAmount;\n        }\n      } else {\n        if (creditorTypeName === 'Credit Card') {\n          values[creditorTypeName] = { balance };\n          values[creditorTypeName].creditLimit = creditLimit;\n        } else {\n          values[creditorTypeName] = { balance };\n          values[creditorTypeName].originalLoanAmount = originalLoanAmount;\n        }\n      }\n    })\n    return values\n  }\n  render() {\n    let colorInfo = ['success', 'info', 'warning', 'danger', 'primary']\n    let { data, status } = this.props.data;\n    let { assets, income, expenditure, creditor, personalNetWorth, cashFlow } = data;\n    if (status) {\n      var assetsData = this.getAssetsData(assets);\n      var incomeData = this.getIncomeData(income);\n      var debtData = this.getDebtData(creditor);\n      var expenditureData = this.getExpenditureData(expenditure);\n      var netWorthData = this.getPersonalNetWorthData(personalNetWorth);\n      var cashFlowData = this.getCashflowData(cashFlow);\n      var debtReductionData = this.getDebtReductionData(creditor);\n      var debtReductionDataKeys = Object.keys(debtReductionData)\n    }\n\n    return (\n      <div className=\"content\">\n        {status ?\n          (<Row>\n            <Col xs={12} md={6}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Total cash and Assets</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Doughnut\n                      options={{\n                        tooltips: {\n                          callbacks: {\n                            label: function (tooltipItem, data) {\n                              let label = [];\n                              label.push(`Account Type: ${data['labels'][tooltipItem['index']]}`);\n                              label.push(`Balance: $${formatMoney(data['datasets'][0]['data'][tooltipItem['index']])}`)\n                              let dataset = data['datasets'][0];\n                              let percent = Math.round((dataset['data'][tooltipItem['index']] / Object.values(dataset[\"_meta\"])[0]['total']) * 100)\n                              label.push(`Percentage: ${percent} %`)\n                              return label\n                            }\n                          },\n                        }\n                      }}\n                      data={assetsData}\n                    />\n                  </div>\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs={12} md={6}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Total income</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Doughnut\n                      options={{\n                        tooltips: {\n                          callbacks: {\n                            label: function (item, data) {\n                              let label = [];\n                              label.push(`Type: ${data['labels'][item['index']]}`);\n                              label.push(`Net Pay: $${formatMoney(data['datasets'][0]['data'][item['index']])}`);\n                              let dataset = data['datasets'][0];\n                              let percent = Math.round((dataset['data'][item['index']] / Object.values(dataset[\"_meta\"])[0]['total']) * 100)\n                              label.push(`Percentage: ${percent} %`)\n                              return label\n                            }\n                          },\n                        }\n                      }}\n                      data={incomeData}\n                    />\n                  </div>\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs={12} md={6}>\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Total debt</h5>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Doughnut\n                      options={{\n                        tooltips: {\n                          callbacks: {\n                            label: function (item, datasets) {\n                              let label = [];\n                              let { result } = creditor;\n                              let data = result[item['index']]\n                              label.push(`Credit: ${data['creditor']}`);\n                              label.push(`Type: ${data['creditorTypeName']}`);\n                              label.push(`Balance: $${formatMoney(data['balance'])}`);\n                              label.push(`APR: ${data['apr'].toFixed(1)} %`);\n                              label.push(`Date: ${data['date']}`);\n                              label.push(`Monthly Payment: $${formatMoney(data['payment'])}`);\n                              label.push(`Limit: ${data['creditorTypeName'] === 'Credit Card' ? '$' + formatMoney(data['creditLimit']) : '- -'}`);\n                              label.push(`Market Value: ${data['creditorTypeName'] !== 'Credit Card' ? '$' + formatMoney(data['marketValue']) : '- -'}`);\n                              let dataset = datasets['datasets'][0];\n                              let percent = Math.round((dataset['data'][item['index']] / Object.values(dataset[\"_meta\"])[0]['total']) * 100)\n                              label.push(`Percentage: ${percent} %`)\n                              return label\n                            }\n                          },\n                        }\n                      }}\n                      data={debtData}\n                    />\n                  </div>\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs=\"12\" md=\"6\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <h5 className=\"card-category\">Total monthly expenditures (in $)</h5>\n                </CardHeader>\n                <CardBody className=\"mt-3\">\n                  <Bar\n                    options={{\n                      legend: {\n                        display: false\n                      },\n                      scales: {\n                        yAxes: [{\n                          ticks: {\n                            beginAtZero: true\n                          }\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          label: function (item, data) {\n                            let label = [];\n                            label.push(`Monthly Expenditure: $${formatMoney(data['datasets'][0]['data'][item['index']])}`);\n                            return label\n                          }\n                        },\n                      }\n                    }}\n                    data={expenditureData}\n                  />\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"card-category\">personal net worth</h5>\n                </CardHeader>\n                <CardBody className=\"line-chart-area\">\n                  <Line\n                    options={{\n                      maintainAspectRatio: false,\n                      legend: {\n                        display: false\n                      },\n                      scales: {\n                        yAxes: [{\n                          ticks: {\n                            beginAtZero: true\n                          }\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          label: function (item, data) {\n                            let label = [];\n                            label.push(`Personal Net Worth: ${data['datasets'][0]['data'][item['index']] > 0 ? '' : '-'} $${formatMoney(Math.abs(data['datasets'][0]['data'][item['index']]))}`);\n                            return label\n                          }\n                        },\n                      }\n                    }}\n                    data={netWorthData}\n                  />\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"card-category\">Cash flow Progress</h5>\n                </CardHeader>\n                <CardBody className=\"line-chart-area\">\n                  <Line\n                    options={{\n                      maintainAspectRatio: false,\n                      legend: { display: false },\n                      scales: {\n                        yAxes: [{\n                          ticks: {\n                            beginAtZero: true\n                          }\n                        }]\n                      },\n                      tooltips: {\n                        callbacks: {\n                          label: function (tooltipItem) {\n                            let element = cashFlow['result'][tooltipItem.xLabel];\n                            let field = ['startingCash', 'addedCash', 'expensesCash', 'endingCash']\n                            let label = []\n                            field.forEach(key => {\n                              label.push(`${key.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g).join(' ').replace(/^\\w/, c => c.toUpperCase())}: $${formatMoney(element[key] ? element[key] : 0)}`)\n                            })\n                            return label\n                          }\n                        }\n                      }\n                    }}\n                    data={cashFlowData}\n                  />\n                </CardBody>\n                <CardFooter>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col xs=\"12\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"card-category\">Debt reduction</h5>\n                </CardHeader>\n                <CardBody>\n                  {\n                    debtReductionDataKeys.map((item, index) => {\n                      if (item !== 'Credit Card') {\n                        return (\n                          <Row key={index}>\n                            <Col md=\"2\" className=\"d-flex align-items-center justify-content-center\">\n                              {item}\n                            </Col>\n                            <Col md=\"10\">\n                              <div className=\"text-center debt-info\">\n                                <span className=\"text-info\">Total Debt : </span> ${formatMoney(debtReductionData[item]['originalLoanAmount'])}, &nbsp;\n                           <span className=\"text-info\">Total Paid : </span>  ${formatMoney(debtReductionData[item]['originalLoanAmount'] - debtReductionData[item].balance)},&nbsp;\n                           <span className=\"text-danger\">Balance : ${formatMoney(debtReductionData[item].balance)}</span>\n                              </div>\n                              <Progress\n                                animated\n                                color={colorInfo[index]}\n                                value={(debtReductionData[item]['originalLoanAmount'] - debtReductionData[item].balance) / debtReductionData[item]['originalLoanAmount'] * 100}\n                                className=\"mb-3\"\n                              >\n                                {((debtReductionData[item]['originalLoanAmount'] - debtReductionData[item].balance) / debtReductionData[item]['originalLoanAmount'] * 100).toFixed(2)} %                        </Progress>\n                            </Col>\n                          </Row>\n                        )\n                      } else {\n                        return (\n                          <Row key={index}>\n                            <Col md=\"2\" className=\"d-flex align-items-center justify-content-center\">\n                              {item}\n                            </Col>\n                            <Col md=\"10\">\n                              <div className=\"text-center debt-info\">\n                                <span className=\"text-info\">Credit Card Limit : </span> ${formatMoney(debtReductionData[item]['creditLimit'])}, &nbsp;\n                                <span className=\"text-danger\">Balance : ${formatMoney(debtReductionData[item].balance)}</span>\n                              </div>\n                              <Progress\n                                animated\n                                color={colorInfo[index]}\n                                value={(1 - debtReductionData[item].balance / debtReductionData[item]['creditLimit']) * 100}\n                                className=\"mb-3\"\n                              >\n                                {((1 - debtReductionData[item].balance / debtReductionData[item]['creditLimit']) * 100).toFixed(2)} %                        </Progress>\n                            </Col>\n                          </Row>\n                        )\n                      }\n                    })\n                    //   colors.map((color, index) => {\n                    //     const ranInt = getRandomInt();\n                    //     return (\n                    //       <Progress\n                    //   striped\n                    //   key={index}\n                    //   color={'#fb111'}\n                    //   value={ranInt}\n                    //   className=\"mb-3\"\n                    // >\n                    //   {ranInt}%\n                    //       </Progress>\n                    //     );\n                    //   })\n                  }\n                </CardBody>\n                <CardFooter>\n\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>) :\n          ''}\n\n      </div>\n    );\n  }\n}\n\nDashboard.propsTypes = {\n  data: PropTypes.object.isRequired,\n  getDashboardData: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  getDashboardData\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.DashBoard,\n})\n\nconst DashboardMapped = connect(mapStateToProps, mapDispatchToProps)(Dashboard)\nexport default DashboardMapped\n","import * as types from './actionConstants';\n\nexport const getDashboardData = () => ({\n    type: types.GET_DASHBOARD_DATA_REQUEST,\n});","import * as types from './actionConstants';\n\nexport const ToggleModal = (title, data) => ({\n    type: types.TOGGLE_MODAL,\n    title,\n    data\n});\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Button, Table } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { ToggleModal } from \"actions/modalAction\";\nimport { getIncome, deleteIncome } from \"actions/incomeActions\";\nimport swal from 'sweetalert';\nimport formatMoney from 'views/utils'\n\n\nclass Income extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false\n        }\n    }\n\n    toggleModal = () => {\n        this.props.ToggleModal('Income')\n    }\n\n    editField = (data) => {\n        this.props.ToggleModal('Income', data)\n    }\n    deleteItem = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    this.props.deleteIncome(id)\n                }\n            });\n    }\n\n    UNSAFE_componentWillMount() {\n        this.props.getIncome()\n    }\n    getTypes(id) {\n        try {\n            return this.props.types.data.filter(x => { return x.id === id })[0].category\n        } catch (error) {\n            return 'Unknown'\n        }\n    }\n\n    render() {\n        let { data } = this.props;\n        let activeData = data.data.filter(x => { return x.status === 'ACTIVE' });\n        let tablebody = activeData.map((item, index) => (\n            <tr key={index}>\n                <td>{index + 1}</td>\n                <td>{item.company}</td>\n                <td>{item.incomeTypeName}</td>\n                <td>$ {formatMoney(item.netAmount)}</td>\n                <td>{item.date}</td>\n                <td className=\"d-flex\">\n                    <i className=\"fas fa-pencil-alt table-action\" onClick={() => this.editField(item)}></i>\n                    <i className=\"fas fa-trash-alt m-auto table-action\" onClick={() => this.deleteItem(item.incomeId)}></i>\n                </td>\n            </tr>\n        ))\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Income</h5>\n                        <Button color=\"primary\" className=\"ml-auto\" onClick={this.toggleModal}>\n                            Add New Income\n                        </Button>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"main-area\">\n                            {data.status ?\n                                (\n                                    activeData.length ?\n                                        (<Table hover>\n                                            <thead>\n                                                <tr>\n                                                    <th>#</th>\n                                                    <th>Company</th>\n                                                    <th>Type</th>\n                                                    <th>Amount</th>\n                                                    <th>Date</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {tablebody}\n                                            </tbody>\n                                        </Table>) : (\n                                            <p>\n                                                There are no result.\n                                            </p>)\n                                )\n                                : ''\n                            }\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nIncome.propsTypes = {\n    ToggleModal: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired,\n    getIncome: PropTypes.func.isRequired,\n    deleteIncome: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = {\n    ToggleModal,\n    getIncome,\n    deleteIncome\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.income,\n    types: state.types\n})\n\n\n\nconst IncomeMapped = connect(mapStateToProps, mapDispatchToProps)(Income)\nexport default IncomeMapped","import * as types from './actionConstants';\n\nexport const getIncome = () => ({\n    type: types.GET_INCOME_REQUEST,\n});\n\nexport const editIncome = (data) => ({\n    type: types.EDIT_INCOME_REQUEST,\n    data\n});\n\nexport const createIncome = (data) => ({\n    type: types.CREATE_INCOME_REQUEST,\n    data\n});\n\nexport const deleteIncome = (id) => ({\n    type: types.DELETE_INCOME_REQUEST,\n    id\n})","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Button, Table } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { ToggleModal } from \"actions/modalAction\";\nimport { getAssets, deleteAssets } from \"actions/assetsAcction\";\nimport swal from 'sweetalert';\nimport formatMoney from 'views/utils'\n\nclass Assets extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    toggleModal = () => {\n        this.props.ToggleModal('Asset')\n    }\n\n    editField = (data) => {\n        this.props.ToggleModal('Asset', data)\n    }\n    deleteItem = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    this.props.deleteAssets(id)\n                }\n            });\n    }\n\n    UNSAFE_componentWillMount() {\n        this.props.getAssets();\n    }\n    render() {\n        let { data } = this.props;\n        let activeData = data.data.filter(x => { return x.status === 'ACTIVE' })\n        let tablebody = activeData.map((item, index) => (\n            <tr key={index}>\n                <td>{item.institution}</td>\n                <td>{item.assetTypeName}</td>\n                <td>$ {formatMoney(item.balance)}</td>\n                <td className=\"d-flex\">\n                    <i className=\"fas fa-pencil-alt table-action\" onClick={() => this.editField(item)}></i>\n                    <i className=\"fas fa-trash-alt m-auto table-action\" onClick={() => this.deleteItem(item.assetId)}></i>\n                </td>\n            </tr>\n        ))\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Assets</h5>\n                        <Button color=\"primary\" className=\"ml-auto\" onClick={this.toggleModal}>\n                            Add New Asset\n                        </Button>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"main-area\">\n                            {data.status ?\n                                (\n                                    activeData.length ?\n                                        (<Table hover>\n                                            <thead>\n                                                <tr>\n                                                    <th>Institution</th>\n                                                    <th>Account Type</th>\n                                                    <th>Balance</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {tablebody}\n                                            </tbody>\n                                        </Table>) : (\n                                            <p>\n                                                There are no result.\n                                            </p>)\n                                )\n                                : ''\n                            }\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nAssets.propsTypes = {\n    ToggleModal: PropTypes.func.isRequired,\n    getAssets: PropTypes.func.isRequired,\n    deleteAssets: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    ToggleModal,\n    getAssets,\n    deleteAssets\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.assets,\n    types: state.types\n})\n\n\nconst AssetsMapped = connect(mapStateToProps, mapDispatchToProps)(Assets)\n\nexport default AssetsMapped","import * as types from './actionConstants';\n\nexport const getAssets = () => ({\n    type: types.GET_ASSETS_REQUEST,\n});\n\nexport const editAssets = (data) => ({\n    type: types.EDIT_ASSETS_REQUEST,\n    data\n});\n\nexport const createAssets = (data) => ({\n    type: types.CREATE_ASSETS_REQUEST,\n    data\n});\n\nexport const deleteAssets = (id) => ({\n    type: types.DELETE_ASSETS_REQUEST,\n    id\n})","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Button, Table } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { ToggleModal } from \"actions/modalAction\";\nimport { getCreditor, deleteCreditor } from \"actions/creditorActions\";\nimport swal from 'sweetalert';\nimport formatMoney from 'views/utils';\n\n\nclass Creditors extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    toggleModal = () => {\n        this.props.ToggleModal('creditor')\n    }\n\n    editField = (data) => {\n        this.props.ToggleModal('creditor', data)\n    }\n\n    deleteItem = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    this.props.deleteCreditor(id)\n                }\n            });\n    };\n\n    UNSAFE_componentWillMount() {\n        this.props.getCreditor();\n    }\n\n    render() {\n        let { data } = this.props;\n        let activeData = [];\n        if (data.status) {\n            activeData = data.data.filter(x => { return x.status === 'ACTIVE' })\n        }\n        let tablebody = activeData.map((item, index) => (\n            <tr key={index}>\n                <td>{item.creditor}</td>\n                <td>{item.creditorTypeName}</td>\n                <td>${(item.balance).toFixed(0)}</td>\n                <td>{parseFloat(formatMoney(item.apr)).toFixed(2)}%</td>\n                <td>{item.date}</td>\n                <td className=\"text-center\">${parseFloat(formatMoney(item.payment)).toFixed(1)}</td>\n                <td>${parseFloat(formatMoney(item.creditLimit)).toFixed(1)}</td>\n                <td>${parseFloat(formatMoney(item.marketValue)).toFixed(1)}</td>\n                <td>{parseFloat(formatMoney(item.yearsToPayOff)).toFixed(1)}</td>\n                <td>{parseFloat(formatMoney(item.proxy)).toFixed(0)}</td>\n                <td className=\"d-flex\">\n                    <i className=\"fas fa-pencil-alt table-action\" onClick={() => this.editField(item)}></i>\n                    <i className=\"fas fa-trash-alt m-auto table-action\" onClick={() => this.deleteItem(item.creditorId)}></i>\n                </td>\n            </tr>\n        ))\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Creditors</h5>\n                        <Button color=\"primary\" className=\"ml-auto\" onClick={this.toggleModal}>\n                            Add New Creditor\n                    </Button>\n                    </CardHeader>\n                    <CardBody>\n                        {/* <div className=\"main-area\"> */}\n                        {tablebody.length ?\n                            (<Table hover className=\"creditor-table\">\n                                <thead>\n                                    <tr>\n                                        <th>creditor</th>\n                                        <th>Type</th>\n                                        <th>Balance</th>\n                                        <th>APR</th>\n                                        <th>date</th>\n                                        <th>monthly payment</th>\n                                        <th>limit</th>\n                                        <th>market value</th>\n                                        <th>years to payoff</th>\n                                        <th>proxy</th>\n                                        <th>actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {tablebody}\n                                </tbody>\n                            </Table>) : 'There are no result'}\n                        {/* </div> */}\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nCreditors.propsTypes = {\n    ToggleModal: PropTypes.func.isRequired,\n    getCreditor: PropTypes.func.isRequired,\n    deleteCreditor: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    ToggleModal,\n    getCreditor,\n    deleteCreditor\n}\nconst mapStateToProps = (state) => ({\n    data: state.creditor,\n    types: state.types\n})\n\n\n\nconst CreditorsMapped = connect(mapStateToProps, mapDispatchToProps)(Creditors);\n\nexport default CreditorsMapped","import * as types from './actionConstants';\n\nexport const getCreditor = () => ({\n    type: types.GET_CREDITOR_REQUEST,\n});\n\nexport const editCreditor = (data) => ({\n    type: types.EDIT_CREDITOR_REQUEST,\n    data\n});\n\nexport const createCreditor = (data) => ({\n    type: types.CREATE_CREDITOR_REQUEST,\n    data\n});\n\nexport const deleteCreditor = (id) => ({\n    type: types.DELETE_CREDITOR_REQUEST,\n    id\n})","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Button, Table } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { ToggleModal } from \"actions/modalAction\";\nimport { getExpenditure, deleteExpenditure } from \"actions/expenditureActions\";\nimport swal from 'sweetalert';\nimport formatMoney from 'views/utils'\n\nclass Expenditure extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    toggleModal = () => {\n        this.props.ToggleModal('expenditure')\n    }\n\n    editField = (data) => {\n        this.props.ToggleModal('expenditure', data)\n    }\n\n    deleteItem = (id) => {\n        swal({\n            title: \"Are you sure?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    this.props.deleteExpenditure(id)\n                }\n            });\n    };\n\n    UNSAFE_componentWillMount() {\n        this.props.getExpenditure();\n    }\n\n    render() {\n        let { data } = this.props\n        let activeData = data.data.filter(x => { return x.status === 'ACTIVE' })\n        let tablebody = activeData.map((item, index) => (\n            <tr key={index}>\n                <td>{item.expense}</td>\n                <td>{item.expenditureTypeName}</td>\n                <td> {item.date}</td>\n                <td>$ {formatMoney(item.amount)}</td>\n                <td className=\"d-flex\">\n                    <i className=\"fas fa-pencil-alt table-action\" onClick={() => this.editField(item)}></i>\n                    <i className=\"fas fa-trash-alt m-auto table-action\" onClick={() => this.deleteItem(item.expenditureId)}></i>\n                </td>\n            </tr>\n        ))\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Expenditure</h5>\n                        <Button color=\"primary\" className=\"ml-auto\" onClick={this.toggleModal}>\n                            Add New Expenditure\n                        </Button>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"main-area\">\n                            {data.status ?\n                                (\n                                    activeData.length ?\n                                        (<Table hover>\n                                            <thead>\n                                                <tr>\n                                                    <th>Expense</th>\n                                                    <th>type</th>\n                                                    <th>Date</th>\n                                                    <th>Amount</th>\n                                                    <th>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {tablebody}\n                                            </tbody>\n                                        </Table>) : (\n                                            <p>\n                                                There are no result.\n                                            </p>)\n                                )\n                                : ''\n                            }\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nExpenditure.propsTypes = {\n    data: PropTypes.object.isRequired,\n    ToggleModal: PropTypes.func.isRequired,\n    getExpenditure: PropTypes.func.isRequired,\n    deleteExpenditure: PropTypes.func.isRequired,\n    types: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    ToggleModal,\n    getExpenditure,\n    deleteExpenditure\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.expenditure,\n    types: state.types\n})\n\n\nconst ExpenditureMapped = connect(mapStateToProps, mapDispatchToProps)(Expenditure)\n\nexport default ExpenditureMapped","import * as types from './actionConstants';\n\nexport const getExpenditure = () => ({\n    type: types.GET_EXPENDITURE_REQUEST,\n});\n\nexport const editExpenditure = (data) => ({\n    type: types.EDIT_EXPENDITURE_REQUEST,\n    data\n});\n\nexport const createExpenditure = (data) => ({\n    type: types.CREATE_EXPENDITURE_REQUEST,\n    data\n});\n\nexport const deleteExpenditure = (id) => ({\n    type: types.DELETE_EXPENDITURE_REQUEST,\n    id\n})","import { NotificationManager } from 'react-notifications';\n\nconst createNotification = (type, message, category, time=2000) => {\n    switch (type) {\n        case 'info':\n            NotificationManager.info(message, category, time);\n            break;\n        case 'success':\n            NotificationManager.success(message, category, time);\n            break;\n        case 'warning':\n            NotificationManager.warning(message, category, time);\n            break;\n        case 'error':\n            NotificationManager.error(message, category, time);\n            break;\n        default:\n            break;\n    }\n};\n\nexport default createNotification","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {\n    Card, CardBody, CardHeader,\n    Button, Table, Row,\n    Col, ButtonGroup, Badge, FormGroup, Input, Form\n} from \"reactstrap\";\nimport formatMoney from 'views/utils';\nimport { getCashFlow } from 'actions/cashFlowAction';\nimport { Line } from 'react-chartjs-2'\nimport notify from 'views/utils/notification'\n\nclass CashFlow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewMode: 'graph',\n            startDate: '',\n            endDate: ''\n        }\n    }\n\n    changeViewMode = (mode) => {\n        this.setState({\n            ...this.state,\n            viewMode: mode\n        })\n    }\n\n    UNSAFE_componentWillMount() {\n        this.props.getCashFlow();\n    }\n\n    genLineData = (moreData = {}) => {\n        let { data } = this.props.data;\n        let dates = data ? Object.keys(data) : [];\n        dates.sort();\n        let values = dates.map(item => (data[item].endingCash))\n        return {\n            labels: dates,\n            datasets: [\n                {\n                    label: 'Ending Cash',\n                    backgroundColor: '#0d1182',\n                    borderColor: '#0d1182',\n                    borderWidth: 1,\n                    data: values,\n                    ...moreData\n                },\n            ],\n\n        };\n    };\n\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value })\n    };\n\n    onSubmit = (e) => {\n        console.log(this.state)\n        e.preventDefault();\n        if (this.state.endDate && this.state.startDate) {\n            this.props.getCashFlow(this.state.startDate, this.state.endDate)\n        } else {\n            notify('error', \"Please insert date.\", 'Form Error')\n        }\n\n    }\n    viewAll = () => {\n        this.props.getCashFlow()\n    }\n    render() {\n        let category = ['income', 'creditor', 'expenses']\n        let { data } = this.props.data;\n        let tableData = [];\n        for (let date in data) {\n            let item = data[date];\n            category.forEach(el => {\n                let temp = item[el];\n                if (temp) {\n                    temp.forEach(element => {\n                        element.category = el\n                        tableData.push(element)\n                    })\n                }\n            })\n        }\n        tableData.sort((a, b) => {\n            return new Date(b.date) - new Date(a.date)\n        })\n        let tableboday = tableData.map((item, index) => (\n            <tr key={index}>\n                <td>{item.company}</td>\n                <td>\n                    <h6>\n                        {item.category === 'income' ?\n                            <Badge color=\"success\">\n                                <span className=\"badge-text\">\n                                    Income\n                                </span>\n                            </Badge> : item.category === 'creditor' ?\n                                <Badge color=\"warning\">\n                                    <span className=\"badge-text\">\n                                        Creditor\n                                    </span>\n                                </Badge>\n                                :\n                                <Badge color=\"danger\">\n                                    <span className=\"badge-text\">\n                                        Expense\n                                    </span>\n                                </Badge>}\n                    </h6>\n                </td>\n                <td>{item.date}</td>\n                <td>\n                    <span\n                        className={\n                            item.category === 'income'\n                                ? 'text-success'\n                                : item.category === 'creditor'\n                                    ? 'text-warning'\n                                    : 'text-danger'\n                        }>\n                        {item.amount > 0 ? '' : '(- '}$ {formatMoney(Math.abs(item.amount))}{item.amount > 0 ? '' : ')'}\n                    </span>\n                </td>\n            </tr>\n        ));\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Cash Flow</h5>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"date-range\">\n                            <Form className=\"d-flex align-items-center justify-content-center\" onSubmit={this.onSubmit}>\n                                <FormGroup className=\"mr-5\">\n                                    <label>Start Date</label>\n                                    <Input type=\"date\" name=\"startDate\" onChange={this.onChange} />\n                                </FormGroup>\n                                <FormGroup className=\"mr-5\">\n                                    <label>End Date</label>\n                                    <Input type=\"date\" name=\"endDate\" onChange={this.onChange} />\n                                </FormGroup>\n                                <FormGroup className=\"ml-4 mr-5\">\n                                    <Button color=\"primary\" type=\"submit\" className=\"mb-0\">\n                                        View\n                                    </Button>\n                                </FormGroup>\n                                <FormGroup className=\"d-none\">\n                                    <Button color=\"success\" type=\"button\" onClick={this.viewAll}>\n                                        View all\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </div>\n                        <div className=\"main-area\">\n                            <Row>\n                                <Col md=\"12\" className=\"text-center\">\n                                    <ButtonGroup className=\"btn-switch\">\n                                        <Button\n                                            color={this.state.viewMode === 'graph' ? 'primary' : 'secondary'}\n                                            onClick={() => this.changeViewMode('graph')}\n                                            active={this.state.viewMode === 'graph'}\n                                        >\n                                            GRAPH VIEW\n                                        </Button>\n                                        <Button\n                                            color={this.state.viewMode === 'table' ? 'primary' : 'secondary'}\n                                            onClick={() => this.changeViewMode('table')}\n                                            active={this.state.viewMode === 'table'}\n                                        >\n                                            TABLE VIEW\n                                        </Button>\n                                    </ButtonGroup>\n                                </Col>\n                                <Col md=\"12\" className=\"text-center\">\n                                    {this.state.viewMode === 'graph' ? (\n                                        <div className=\"mt-4\">\n                                            <Card>\n                                                <CardHeader>\n                                                    <h5 className=\"card-category\">Available Cash</h5>\n                                                </CardHeader>\n                                                <CardBody className=\"line-chart-area\">\n                                                    <Line\n                                                        options={{\n                                                            maintainAspectRatio: false,\n                                                            legend: { display: false },\n                                                            scales: {\n                                                                yAxes: [{\n                                                                    ticks: {\n                                                                        beginAtZero: true\n                                                                    }\n                                                                }]\n                                                            },\n                                                            tooltips: {\n                                                                callbacks: {\n                                                                    label: function (tooltipItem) {\n                                                                        let element = data[tooltipItem.xLabel];\n                                                                        let field = ['startingCash', 'addedCash', 'expensesCash', 'endingCash']\n                                                                        let label = []\n                                                                        field.forEach(key => {\n                                                                            label.push(`${key.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g).join(' ').replace(/^\\w/, c => c.toUpperCase())}: $${element[key] ? element[key] : 0}`)\n                                                                        })\n                                                                        return label\n                                                                    }\n                                                                }\n                                                            }\n                                                        }}\n                                                        data={this.genLineData({ fill: true, lineTension: 0, backgroundColor: 'pink', borderColor: '#d60163d4' })}\n                                                    />\n                                                </CardBody>\n                                            </Card>\n                                        </div>\n                                    ) : (\n                                            <Table hover className=\"text-left\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Company</th>\n                                                        <th>Type</th>\n                                                        <th>Date</th>\n                                                        <th>Amount</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {tableboday}\n                                                </tbody>\n                                            </Table>\n                                        )}\n                                </Col>\n                            </Row>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nCashFlow.propsTypes = {\n    data: PropTypes.object.isRequired,\n    getCashFlow: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n    getCashFlow\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.cashFlow,\n})\n\nconst CashFlowMapped = connect(mapStateToProps, mapDispatchToProps)(CashFlow)\nexport default CashFlowMapped","import * as types from './actionConstants';\n\nexport const getCashFlow = (start, end) => ({\n    type: types.GET_CASH_FLOW_REQUEST,\n    date: { start, end }\n});","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Table, Col, Row } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport formatMoney from 'views/utils';\nimport { getNetWorth } from 'actions/netWorthAction';\n\n\nclass NetWorth extends Component {\n\n    UNSAFE_componentWillMount() {\n        this.props.getNetWorth();\n    }\n    render() {\n        let tableData = {\n            assets: { total: 0, tableData: [] },\n            investments: { total: 0, tableData: [] },\n            cashAndEquivalents: { total: 0, tableData: [] },\n            Liabilities: { total: 0, tableData: [] }\n        };\n        let { data } = this.props.data;\n        let { Assets, Liabilities } = data;\n        if (Assets) {\n            let { assets, investments, cashAndEquivalents } = Assets;\n            tableData.assets.tableData = assets.map((item, index) => {\n                tableData.assets.total += item.marketValue;\n                return (\n                    <tr key={index}>\n                        <td>{item.category}</td>\n                        <td className=\"text-right\">$ {formatMoney(item.marketValue)}</td>\n                    </tr>\n                )\n            });\n            tableData.investments.tableData = investments.map((item, index) => {\n                tableData.investments.total += item.assetBalance;\n                return (\n                    <tr key={index}>\n                        <td>{item.category}</td>\n                        <td className=\"text-right\">$ {formatMoney(item.assetBalance)}</td>\n                    </tr>\n                )\n            })\n            tableData.cashAndEquivalents.tableData = cashAndEquivalents.map((item, index) => {\n                tableData.cashAndEquivalents.total += item.assetBalance;\n                return (\n                    <tr key={index}>\n                        <td>{item.category}</td>\n                        <td className=\"text-right\">$ {formatMoney(item.assetBalance)}</td>\n                    </tr>\n                )\n            })\n            tableData.Liabilities.tableData = Liabilities.map((item, index) => {\n                tableData.Liabilities.total += item.creditBalance;\n                return (\n                    <tr key={index}>\n                        <td>{item.category}</td>\n                        <td className=\"text-right\">$ {formatMoney(item.creditBalance)}</td>\n                    </tr>\n                )\n            })\n        }\n        let totalAssets = tableData.assets.total + tableData.cashAndEquivalents.total + tableData.investments.total;\n        let netWorth = totalAssets - tableData.Liabilities.total\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">personal net worth</h5>\n                    </CardHeader>\n                    <CardBody className=\"main-area\">\n                        <Row>\n                            <Col md=\"6\">\n                                <div className=\"category-header text-uppercase\">\n                                    Assets\n                                    </div>\n                                <Table borderless>\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>Assets</th>\n                                            <th className=\"text-right\">${formatMoney(tableData.assets.total)}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableData.assets.tableData}\n                                    </tbody>\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>cash and equivalent</th>\n                                            <th className=\"text-right\">${formatMoney(tableData.cashAndEquivalents.total)}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableData.cashAndEquivalents.tableData}\n                                    </tbody>\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>Investments</th>\n                                            <th className=\"text-right\">${formatMoney(tableData.investments.total)}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableData.investments.tableData}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col md=\"6\">\n                                <div className=\"category-header text-uppercase\">\n                                    Liabilities\n                                </div>\n                                <Table borderless>\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>Liabilities</th>\n                                            <th className=\"text-right\">$ {formatMoney(tableData.Liabilities.total)}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tableData.Liabilities.tableData}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                            <Col md=\"6\">\n                                <Table className=\"m-0\">\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>Total Assets</th>\n                                            <th className=\"text-right\">\n                                                $ {formatMoney(totalAssets)}\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                </Table>\n                            </Col>\n                            <Col md=\"6\">\n                                <Table className=\"m-0\">\n                                    <thead className=\"net-worth-header\">\n                                        <tr>\n                                            <th>Total Liabilities</th>\n                                            <th className=\"text-right\">$ {formatMoney(tableData.Liabilities.total)}</th>\n                                        </tr>\n                                    </thead>\n                                </Table>\n                            </Col>\n                            <Col md=\"12\">\n                                <div className=\"category-header text-uppercase border-bottom\">\n                                    <span>Net worth</span>\n                                    <span className=\"float-right\">${formatMoney(netWorth)}</span>\n                                </div>\n                                <div className=\"category-header text-uppercase\">\n                                    <span>Leverage ratio</span>\n                                    <span className=\"float-right\">{formatMoney(tableData.Liabilities.total / totalAssets)}</span>\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n}\n\nNetWorth.propsTypes = {\n    data: PropTypes.object.isRequired,\n    getNetWorth: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n    getNetWorth\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.netWorth,\n})\n\nconst NetWorthMapped = connect(mapStateToProps, mapDispatchToProps)(NetWorth)\nexport default NetWorthMapped","import * as types from './actionConstants';\n\nexport const getNetWorth = () => ({\n    type: types.GET_NET_WORTH_REQUEST,\n});","import Dashboard from \"views/Dashboard.js\";\nimport Income from 'views/income'\nimport Assets from 'views/assets'\nimport Creditors from 'views/creditors'\nimport Expenditure from 'views/expenditure'\nimport CashFlow from 'views/cashFlow'\nimport NewWorth from 'views/newWorth'\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"design_app\",\n    component: Dashboard,\n    layout: \"\",\n  },\n  {\n    path: \"/income\",\n    name: \"INCOME\",\n    icon: \"business_money-coins\",\n    component: Income,\n    layout: \"\",\n  },\n  {\n    path: \"/assets\",\n    name: \"ASSETS\",\n    icon: \"business_briefcase-24\",\n    component: Assets,\n    layout: \"\",\n  },\n  {\n    path: \"/creditors\",\n    name: \"CREDITORS\",\n    icon: \"shopping_credit-card\",\n    component: Creditors,\n    layout: \"\",\n  },\n  {\n    path: \"/expenditure\",\n    name: \"EXPENDITURE\",\n    icon: \"education_paper\",\n    component: Expenditure,\n    layout: \"\",\n  },\n  {\n    path: \"/cash-flow\",\n    name: \"CASH FLOW\",\n    icon: \"business_bank\",\n    component: CashFlow,\n    layout: \"\",\n  },\n  {\n    path: \"/net-worth\",\n    name: \"NET WORTH\",\n    icon: \"objects_diamond\",\n    component: NewWorth,\n    layout: \"\",\n  },\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport routes from \"routes.js\";\n\nimport { logout } from \"actions/authAction\";\n\nclass Header extends React.Component {\n  state = {\n    isOpen: false,\n    dropdownOpen: false,\n    color: \"transparent\",\n  };\n  sidebarToggle = React.createRef();\n  toggle = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"white\",\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  dropdownToggle = (e) => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  };\n  getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  };\n  openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"white\",\n      });\n    } else {\n      this.setState({\n        color: \"transparent\",\n      });\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  Logout = () => {\n    console.log('--')\n    this.props.logout()\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          'black'\n        }\n        expand=\"lg\"\n        className={\n          \"navbar-absolute fixed-top bg-white\"\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <Nav navbar>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={(e) => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"now-ui-icons users_single-02\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\" href=\"/profile\">Profile</DropdownItem>\n                  <DropdownItem tag=\"a\" onClick={this.Logout}>Log out</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nHeader.propsTypes = {\n  logout: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  logout\n}\n\nconst mappedHeader = connect(null, mapDispatchToProps)(Header)\n\nexport default mappedHeader;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo-gray.png\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.backgroundColor}>\n        <div className=\"logo\">\n          <a\n            href=\"/\"\n            className=\"simple-text logo-normal\"\n          >\n            <img src={logo} alt=\"react-logo\" />\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.layout + prop.path) +\n                    (prop.pro ? \" active active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={\"now-ui-icons \" + prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import * as types from './actionConstants';\n\nexport const login = (user) => ({\n    type: types.LOGIN_REQUEST,\n    user\n});\n\nexport const register = (user) => ({\n    type: types.REGISTER_REQUEST,\n    user\n});\n\nexport const clearErr = () => ({\n    type: types.CLRERR\n})\n\nexport const logout = () => ({\n    type: types.LOGOUT\n});\n\nexport const resetpwd = (email) => ({\n    type: types.RESET_PWD_REQUEST,\n    email\n})","\nimport React from \"react\";\nimport { Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport grayLogo from \"logo-gray.png\"\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <nav>\n            <ul>\n              <li>\n                <a href=\"/\">\n                  <img src={grayLogo} alt=\"logo\" width=\"100px\" />\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"#Terms\"\n                >\n                  Terms\n                </a>\n              </li>\n              |\n              <li>\n                <a\n                  href=\"#Policy\"\n                >\n                  Privacy Policy\n                </a>\n              </li>\n              |\n              <li>\n                <a\n                  href=\"#Site-map\"\n                >\n                  Site Map\n                </a>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"copyright\">\n            Copyright\n            &copy; Eric Coleman. All rights reserved.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Row, Col, Form, FormGroup, Input } from \"reactstrap\";\n\nexport default class AssetsModalForm extends Component {\n\n    onChange = (e) => {\n        this.props.onChange(e, 'asset');\n    }\n    render() {\n        let { data, editMode, options } = this.props;\n        let optionData = options.map((item, index) => (\n            <option value={item.id} key={index} selected={editMode && data.assetType === item.id}>{item.category}</option>\n        ))\n        return (\n            <div>\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Institution\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"text\" id=\"institution\" name=\"institution\" defaultValue={editMode ? data.institution : ''} placeholder=\"Institution\" onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Account Type\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"select\" id=\"assetType\" name=\"assetType\" onChange={this.onChange} >\n                                    {optionData}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Balance\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"number\" min=\"0\" id=\"balance\" name=\"balance\" placeholder=\"Balance\" defaultValue={editMode ? data.balance : ''} onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Row, Col, Form, FormGroup, Input } from \"reactstrap\";\n\nexport default class IncomeModalForm extends Component {\n\n    onChange = (e) => {\n        this.props.onChange(e, 'income')\n    }\n    render() {\n        let { data, editMode, options } = this.props\n        let optionData = options.map((item, index) => (\n            <option value={item.id} key={index} selected={editMode && data.incomeType === item.id}>{item.category}</option>\n        ))\n        return (\n            <div>\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Company\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input\n                                    type=\"text\" id=\"company\"\n                                    defaultValue={editMode ? data.company : ''}\n                                    name=\"company\"\n                                    placeholder=\"Company\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Type\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"select\" id=\"incomeType\" name=\"incomeType\" placeholder=\"Income Type\" onChange={this.onChange}>\n                                    {optionData}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Net Amount\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input\n                                    type=\"number\" min=\"0\"\n                                    defaultValue={editMode ? data.netAmount : ''}\n                                    id=\"netAmount\"\n                                    name=\"netAmount\"\n                                    placeholder=\"Net Amount\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Date\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"date\" id=\"payDay\" name=\"date\" placeholder=\"Pay Day\" defaultValue={editMode ? data.date : 0} onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Form, FormGroup, Input } from \"reactstrap\";\n\nexport default class ExpenditureModalForm extends Component {\n\n    onChange = (e) => {\n        this.props.onChange(e, 'expenditure');\n    }\n    render() {\n        let { data, editMode, options } = this.props\n        let optionData = options.map((item, index) => (\n            <option value={item.id} key={index} selected={editMode && item.id === data.expenditureType}>{item.category}</option>\n        ))\n        return (\n            <div>\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Expense\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"text\" id=\"expense\" name=\"expense\" defaultValue={editMode ? data.expense : ''} placeholder=\"Expense\" onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Type\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"select\" id=\"expenditureType\" name=\"expenditureType\" onChange={this.onChange} >\n                                    {optionData}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Amount\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"number\" min=\"0\" id=\"amount\" name=\"amount\" placeholder=\"Amount\" defaultValue={editMode ? data.amount : ''} onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"4\" className=\"field-name\">\n                            <FormGroup>\n                                Date\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"8\">\n                            <FormGroup>\n                                <Input type=\"date\" id=\"payDay\" name=\"date\" placeholder=\"Pay Day\" defaultValue={editMode ? data.date : 0} onChange={this.onChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Form, FormGroup, Input } from \"reactstrap\";\n\nexport default class CreditorModalForm extends Component {\n\n    onChange = (e) => {\n        let value = e.target.value;\n        if (e.target.type === 'select-one' && e.target.name === 'creditorType') {\n            if (value === '404') {\n                console.log(true)\n                this.props.changeForm(true)\n            } else {\n                console.log(false)\n                this.props.changeForm(false)\n            }\n        }\n        this.props.onChange(e, 'creditor');\n    }\n    render() {\n        let { data, editMode, options } = this.props;\n        console.log(\"CreditorModalForm -> render -> data\", data)\n        let optionData = options.map((item, index) => (\n            <option value={item.id} key={index} selected={editMode && item.id === data.creditorType}>{item.category}</option>\n        ));\n        let tlData = [\n            'ALWAYS',\n            'NEVER',\n            'OCCASIONALLY']\n        let timesLateOptionData = tlData.map((item, index) => (\n            <option value={item} key={index} selected={editMode && item === data.numberOfTimesLate} > {item}</option>\n        ))\n        let dateData = [];\n        for (let i = 1; i < 32; i++) {\n            dateData.push(<option key={i} value={i}>{i}</option>)\n        }\n        return (\n            <div>\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Creditor\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input type=\"text\" id=\"creditor\" name=\"creditor\" defaultValue={editMode ? data.creditor : ''} placeholder=\"Creditor\" onChange={this.onChange} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Type\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input type=\"select\" id=\"creditorType\" name=\"creditorType\" onChange={this.onChange} >\n                                            {optionData}\n                                        </Input>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Balance\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\" min=\"0\"\n                                            id=\"balance\" name=\"balance\"\n                                            placeholder=\"Balance\"\n                                            defaultValue={editMode ? data.balance : ''}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        APR\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\"\n                                            min=\"0\" id=\"apr\"\n                                            name=\"apr\"\n                                            onChange={this.onChange}\n                                            defaultValue={editMode ? data.apr : ''}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\" className={this.props.creditCard ||\n                            (editMode && data.creditorTypeName === 'Credit Card') ||\n                            (editMode && data.creditorTypeName !== 'Credit Card' && this.props.creditCard) ? '' : 'd-none'}>\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Credit Card Limit\n                                        </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\" min=\"0\"\n                                            id=\"creditLimit\" name=\"creditLimit\"\n                                            placeholder=\"limit\"\n                                            defaultValue={editMode ? data.creditLimit : ''}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\" className={this.props.creditCard ||\n                            (editMode && data.creditorType === 404) ||\n                            (editMode && data.creditorType !== 404 && this.props.creditCard) ? 'd-none' : ''}>\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Original Amount\n                                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\" min=\"0\"\n                                            id=\"originalLoanAmount\" name=\"originalLoanAmount\"\n                                            placeholder=\"Original Loan Amount\"\n                                            defaultValue={editMode ? data.originalLoanAmount : ''}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Times Late\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"select\"\n                                            id=\"numberOfTimesLate\" name=\"numberOfTimesLate\"\n                                            placeholder=\"Number of Times Late\"\n                                            onChange={this.onChange}\n                                        >\n                                            {timesLateOptionData}\n                                        </Input>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Monthly Payment\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\" min=\"0\"\n                                            id=\"payment\" name=\"payment\"\n                                            placeholder=\"payment\"\n                                            defaultValue={editMode ? data.payment : ''}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Date\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input type=\"date\" id=\"date\" name=\"date\" defaultValue={editMode ? data.date : 0} onChange={this.onChange} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col md=\"12\">\n                            <Row className=\"align-items-center\">\n                                <Col md=\"4\" className=\"field-name\">\n                                    <FormGroup>\n                                        Years Paying\n                            </FormGroup>\n                                </Col>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                        <Input\n                                            type=\"number\" min=\"0\"\n                                            id=\"numberOfYearsPaying\" name=\"numberOfYearsPaying\"\n                                            placeholder=\"Number of Years Paying\"\n                                            defaultValue={editMode ? data.numberOfYearsPaying : ''}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                        {this.props.creditCard || (editMode && data.creditorType === 404) ? '' : (\n                            <Col md=\"12\">\n                                <Row className=\"align-items-center\">\n                                    <Col md=\"4\" className=\"field-name\">\n                                        <FormGroup>\n                                            Market Value\n                            </FormGroup>\n                                    </Col>\n                                    <Col md=\"8\">\n                                        <FormGroup>\n                                            <Input\n                                                type=\"number\" min=\"0\"\n                                                id=\"marketValue\" name=\"marketValue\"\n                                                placeholder=\"Market Value\"\n                                                defaultValue={editMode ? data.marketValue : ''}\n                                                onChange={this.onChange}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        )}\n                    </Row>\n                </Form>\n            </div>\n        )\n    }\n}\n","import React, {\n    Component\n} from 'react'\nimport {\n    Modal,\n    Button,\n    ModalBody\n} from \"reactstrap\";\n\nimport {\n    connect\n} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport {\n    ToggleModal\n} from \"actions/modalAction\";\nimport {\n    createAssets,\n    editAssets\n} from \"actions/assetsAcction\"\nimport {\n    createIncome,\n    editIncome\n} from \"actions/incomeActions\"\nimport {\n    createExpenditure,\n    editExpenditure\n} from \"actions/expenditureActions\";\nimport {\n    createCreditor,\n    editCreditor\n} from \"actions/creditorActions\";\n//modal Forms\nimport Assets from './forms/assets';\nimport Income from './forms/income';\nimport Expenditure from './forms/expenditure';\nimport Creditor from './forms/creditors'\nimport notify from 'views/utils/notification';\n\nclass ModalComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            asset: {\n                institution: '',\n                assetType: 100,\n                balance: 0\n            },\n            income: {\n                company: '',\n                incomeType: 200,\n                netAmount: 0,\n                date: ''\n            },\n            expenditure: {\n                expense: '',\n                expenditureType: 300,\n                amount: 0,\n                date: ''\n            },\n            creditor: {\n                creditor: '',\n                creditorType: 400,\n                balance: 0,\n                date: '',\n                numberOfTimesLate: \"NEVER\",\n                originalLoanAmount: 0,\n                numberOfYearsPaying: 0,\n                apr: 0,\n                payment: 0,\n                creditLimit: 0,\n                marketValue: 0,\n            },\n            editData: {},\n            editMode: false,\n            creditCard: false\n        }\n    }\n    changeForm = (state) => {\n        let currentState = this.state;\n        currentState.creditCard = state;\n        this.setState(currentState);\n    }\n    toggleModal = () => {\n        this.props.ToggleModal()\n    }\n    selectModal = (title) => {\n        let {\n            data\n        } = this.props.types;\n        title = title ? title.toLowerCase() : '';\n        switch (title) {\n            case 'asset':\n                return <Assets editMode = {\n                    this.state.editMode\n                }\n                data = {\n                    this.state.editData\n                }\n                options = {\n                    data\n                }\n                onChange = {\n                    this.onChange\n                }\n                />;\n            case 'income':\n                return <Income editMode = {\n                    this.state.editMode\n                }\n                data = {\n                    this.state.editData\n                }\n                options = {\n                    data\n                }\n                onChange = {\n                    this.onChange\n                }\n                />;\n            case 'expenditure':\n                return <Expenditure editMode = {\n                    this.state.editMode\n                }\n                data = {\n                    this.state.editData\n                }\n                options = {\n                    data\n                }\n                onChange = {\n                    this.onChange\n                }\n                />\n            case 'creditor':\n                return <Creditor editMode = {\n                    this.state.editMode\n                }\n                data = {\n                    this.state.editData\n                }\n                options = {\n                    data\n                }\n                onChange = {\n                    this.onChange\n                }\n                changeForm = {\n                    this.changeForm\n                }\n                creditCard = {\n                    this.state.creditCard\n                }\n                />\n            default:\n                return '';\n        }\n    }\n\n    onChange = (e, type) => {\n        e.preventDefault();\n        let data;\n        if (this.state.editMode) {\n            data = this.state.editData;\n        } else {\n            data = this.state[type]\n        }\n        data[e.target.name] = e.target.type === 'number' || e.target.name === 'creditorType' ? parseFloat(e.target.value) : e.target.value\n        this.setState({\n            ...this.state,\n            data\n        });\n    }\n\n    selectAction = (title) => {\n        let {\n            createAssets,\n            editAssets,\n            editIncome,\n            createIncome,\n            createExpenditure,\n            editExpenditure,\n            createCreditor,\n            editCreditor\n        } = this.props;\n        let {\n            editMode\n        } = this.state\n        switch (title) {\n            case 'asset':\n                if (!editMode) {\n                    return createAssets\n                } else {\n                    return editAssets\n                }\n                case 'income':\n                    if (!editMode) {\n                        return createIncome\n                    } else {\n                        return editIncome\n                    }\n\n                    case 'expenditure':\n                        if (!editMode) {\n                            return createExpenditure\n                        } else {\n                            return editExpenditure\n                        }\n                        case 'creditor':\n                            if (!editMode) {\n                                return createCreditor\n                            } else {\n                                return editCreditor\n                            }\n                            default:\n                                return '';\n        }\n    }\n\n    onSubmit(title) {\n        title = title.toLowerCase()\n        let action = this.selectAction(title);\n        let data = this.state.editMode ? this.state.editData : this.state[title]\n        console.log(\"ModalComponent -> onSubmit -> data\", data)\n        let keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            if (!data[keys[i]] && title !== 'creditor') {\n                notify('error', 'Please complete the form', 'Form Error')\n                return\n            }\n            console.log(keys[i], data.creditorType, data[keys[i]])\n        }\n        if ((title === 'creditor' && data.creditorType === 404 && data.balance > data.limit) || (data.balance > data.originalLoanAmount && title === 'creditor' && data.creditorType !== 404)) {\n            notify('error', 'Limit cannot be less than balance.', 'Validation Error');\n            return\n        }\n        if (action) {\n            action(data)\n            console.log(\"ModalComponent -> onSubmit -> data\", data)\n        }\n        this.toggleModal()\n    }\n\n    UNSAFE_componentWillReceiveProps(props) {\n        let {\n            data,\n            title\n        } = props.modal\n        title = title ? title.toLowerCase() : '';\n        if (data) {\n            if (title === 'creditor') {\n                let keys = Object.keys(this.state.creditor);\n                let editData = {}\n                keys.forEach(key => {\n                    editData[key] = data[key]\n                });\n                editData.creditorId = data.creditorId\n                this.setState({\n                    ...this.state,\n                    editMode: true,\n                    editData: editData\n                })\n            } else {\n                this.setState({\n                    ...this.state,\n                    editMode: true,\n                    editData: data\n                })\n            }\n        } else {\n            let data = this.state[title]\n            if (!this.state.editMode && title) {\n                let data = this.state[title];\n                for (let entry in data) {\n                    if (entry !== `${title}Type` && entry !== 'numberOfTimesLate') {\n                        if (typeof data[entry] === 'number') {\n                            data[entry] = 0;\n                        } else {\n                            data[entry] = '';\n                        }\n                    }\n                }\n            }\n            this.setState({\n                ...this.state,\n                editMode: false,\n                editData: {},\n                [title]: data\n            })\n        }\n    }\n    render() {\n        let { modal } = this.props;\n        let form = this.selectModal(modal.title)\n        return (\n            <div>\n                <Modal isOpen={modal.show}\n                    toggle={this.toggleModal}>\n                    <ModalBody>\n                        <div className=\"modal-title mt-3\">\n                            {this.state.editMode ? \"EDIT\" : \"ADD new\"}  {modal.title}\n                        </div>\n                        <div className=\"modal-main-board mt-3 mb-3\">\n                            {form}\n                        </div>\n                        <div className=\"modal-btn-group\">\n                            <Button className=\"ml-2\" color=\"success\" onClick={() => this.onSubmit(modal.title)}>\n                                Save\n                            </Button>\n                            <Button color=\"warning\" onClick={this.toggleModal}>Cancel</Button>\n                        </div>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nModalComponent.propsTypes = {\n    ToggleModal: PropTypes.func.isRequired,\n    modal: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    createAssets: PropTypes.func.isRequired,\n    editAssets: PropTypes.func.isRequired,\n    createIncome: PropTypes.func.isRequired,\n    editIncome: PropTypes.func.isRequired,\n    createExpenditure: PropTypes.func.isRequired,\n    editExpenditure: PropTypes.func.isRequired,\n    createCreditor: PropTypes.func.isRequired,\n    editCreditor: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = {\n    ToggleModal,\n    createAssets,\n    editAssets,\n    createIncome,\n    editIncome,\n    createExpenditure,\n    editExpenditure,\n    createCreditor,\n    editCreditor\n\n}\nconst mapStateToProps = (state) => ({\n    modal: state.modal,\n    types: state.types\n})\n\nconst mappedModalComponent = connect(mapStateToProps, mapDispatchToProps)(ModalComponent)\n\nexport default mappedModalComponent","import React, { Component } from 'react'\nimport LoadingOverlay from \"react-loading-overlay\";\nimport styled, { css } from \"styled-components\";\nimport { HashLoader } from \"react-spinners\";\n\nconst DarkBackground = styled.div`\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1111; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n  ${(props) =>\n        props.disappear &&\n        css`\n      display: block; /* show */\n    `}\n`;\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className=\"overlay-loader\">\n                <DarkBackground disappear={this.props.active}>\n                    <LoadingOverlay\n                        active={true}\n                        spinner={<HashLoader color={\"white\"} />}\n                    />\n                </DarkBackground>\n            </div>\n        )\n    }\n}\n\n","import React from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getCustomer, editCustomer } from 'actions/customerAction';\n\nclass ProfilePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                \"customerId\": '',\n                \"firstName\": \"\",\n                \"lastName\": \"\",\n                \"email\": \"\",\n                \"contactNumber\": null,\n                \"address1\": \"\",\n                \"address2\": \"\",\n                \"city\": null,\n                \"state\": null,\n                \"zip\": null,\n                \"status\": \"ACTIVE\",\n                \"joinDate\": \"\",\n                \"membershipStartDate\": null,\n                \"membershipEndDate\": null\n            },\n            password: {\n                newPassword: '',\n                oldPassword: '',\n                confirm: ''\n            }\n        }\n    }\n    onChange = (e) => {\n        let { type, name, value } = e.target;\n        let data\n        if (type === 'password') {\n            data = this.state.password\n            data[name] = value;\n            this.setState({ password: data })\n        } else {\n            data = this.state.user\n            data[name] = value;\n            this.setState({ user: data })\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        let user = this.props.customer.data\n        this.setState({ user })\n    }\n    UNSAFE_componentWillMount() {\n        this.props.getCustomer();\n    }\n    updateProfile = (e) => {\n        e.preventDefault();\n        this.props.editCustomer(this.state.user)\n    }\n    changePwd = (e) => {\n        e.preventDefault();\n        let { password } = this.state;\n        delete password.confirm;\n        password.customerId = this.state.user.customerId;\n        this.props.editCustomer(password)\n    }\n    render() {\n        let { user } = this.state;\n        return (\n            <div className=\"content\">\n                <Card className=\"main-area\">\n                    <CardHeader className=\"d-flex align-items-center\">\n                        <h5 className=\"card-category\">Edit profile</h5>\n                    </CardHeader>\n                    <CardBody className=\"main-area\">\n                        <Form onSubmit={this.updateProfile}>\n                            <Row>\n                                <Col className=\"pr-1\" md=\"6\">\n                                    <FormGroup>\n                                        <label>First Name</label>\n                                        <Input\n                                            name=\"firstName\"\n                                            defaultValue={user.firstName}\n                                            placeholder=\"First Name\"\n                                            type=\"text\"\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                                <Col className=\"pl-1\" md=\"6\">\n                                    <FormGroup>\n                                        <label>Last Name</label>\n                                        <Input\n                                            name=\"lastName\"\n                                            defaultValue={user.lastName}\n                                            placeholder=\"Last Name\"\n                                            type=\"text\"\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"pr-1\" md=\"6\">\n                                    <FormGroup>\n                                        <label htmlFor=\"exampleInputEmail1\">\n                                            Email address\n                                        </label>\n                                        <Input placeholder=\"Email\" type=\"email\" defaultValue={user.email} name=\"email\" onChange={this.onChange} />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <Button className=\"float-right\" color=\"primary\" type=\"submit\">\n                                            Update User Info\n                                         </Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                        <hr />\n                        <h5 className=\"card-category mt-5\">Change Password</h5>\n                        <Form onSubmit={this.changePwd}>\n                            <Row>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Old Password</label>\n                                        <Input type=\"password\" name=\"oldPassword\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"6\">\n\n                                </Col>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>New Password</label>\n                                        <Input type=\"password\" name=\"newPassword\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Confirm Password</label>\n                                        <Input name=\"confirm\" onChange={this.onChange} type=\"password\" required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"12\">\n                                    <Button className=\"float-right\" color=\"primary\" type=\"submit\" disabled={this.state.password.newPassword !== this.state.password.confirm}>\n                                        Change Password\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\nProfilePage.propsTypes = {\n    getCustomer: PropTypes.func.isRequired,\n    editCustomer: PropTypes.func.isRequired,\n    customer: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    getCustomer, editCustomer\n}\nconst mapStateToProps = (state) => ({\n    customer: state.customer\n})\nconst mappedProfilePage = connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\nexport default mappedProfilePage;\n","import React from \"react\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport Modal from 'views/utils/modal';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nimport routes from \"routes.js\";\nimport Loader from \"views/utils/loader\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport ProfilePage from \"views/profile\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  state = {\n    backgroundColor: \"blue\",\n  };\n  mainPanel = React.createRef();\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.mainPanel.current.scrollTop = 0;\n    }\n  }\n\n  handleColorClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          backgroundColor={this.state.backgroundColor}\n        />\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          <Navbar {...this.props} />\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  component={prop.component}\n                  key={key}\n                />\n              );\n            })}\n            <Route\n              path=\"/profile\"\n              component={ProfilePage}\n            />\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n          <Modal />\n          <Footer fluid />\n          <NotificationContainer />\n          <Loader active={this.props.state.loading} />\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propsTypes = {\n  state: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n  state: state.default\n})\n\nconst mappedDashboard = connect(mapStateToProps, null)(Dashboard)\n\nexport default mappedDashboard;\n","import * as types from './actionConstants';\n\nexport const getCustomer = () => ({\n    type: types.GET_CUSTOMER_REQUEST,\n});\n\nexport const editCustomer = (data) => ({\n    type: types.EDIT_CUSTOMER_REQUEST,\n    data\n});","import React, { Component } from 'react'\nimport logo from \"logo-gray.png\";\n\n\nexport default class authHeader extends Component {\n    render() {\n        return (\n            <div className=\"auth-header text-center\">\n                <a href=\"/\">\n                    <img src={logo} alt=\"logo\" width=\"170\" />\n                </a>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Form, Row, Col, FormGroup, Input, Button } from 'reactstrap';\n// import { FacebookLoginButton } from \"react-social-login-buttons\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { login } from \"actions/authAction\";\nimport { NotificationContainer } from 'react-notifications';\nimport notify from 'views/utils/notification';\nimport 'react-notifications/lib/notifications.css';\nimport Loader from 'views/utils/loader';\n// import { GoogleLogin } from 'react-google-login';\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\n// import { appID } from './appParams'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                username: '',\n                password: ''\n            }\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.login(this.state.user)\n    }\n\n    onChange = (e) => {\n        let user = this.state.user;\n        user[e.target.name] = e.target.value\n        this.setState({ user: user })\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        let { state } = nextProps;\n        if (!state.isLoading && state.errors) {\n            notify('error', state.errors, 'Auth')\n        }\n    }\n\n    notification = () => {\n        notify('info', 'Google Login', 'Authentication');\n\n    }\n    responseGoogle = (response) => {\n        let { profileObj } = response;\n        let user = {\n            username: profileObj.email,\n            password: profileObj.email,\n        }\n        this.props.login(user);\n    }\n\n    responseFacebook = (response) => {\n        console.log(response);\n    }\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <Card>\n                    <CardHeader className=\"auth-form-header mb-2\">SIGN IN TO GET STARTED</CardHeader>\n                    <CardBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <Row>\n                                <Col md=\"12\">\n                                    <FormGroup>\n                                        <label>Email Address</label>\n                                        <Input name='username' type=\"email\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"12\">\n                                    <FormGroup>\n                                        <label>Password</label>\n                                        <Input type=\"password\" name=\"password\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row className=\"mt-4\">\n                                <Col md=\"12\" className=\"text-center mb-2\">\n                                    <Button color=\"primary\" type=\"submit\">\n                                        SIGN IN\n                                    </Button>\n                                </Col>\n                                <Col md=\"12\" className=\"text-center mt-1 mb-1\">\n                                    <p className=\"social-header\">Forgot password? <a href=\"/auth/resetpwd\">RESET NOW</a></p>\n                                </Col>\n                                <hr style={{ width: '83%' }} />\n                            </Row>\n                        </Form>\n                        <Row>\n                            {/* <Col md=\"12\" className=\"text-center mt-2\">\n                                <p className=\"social-header\">Sign in with social account.</p>\n                            </Col>\n                            <Col md=\"6\" className=\"d-flex social-google\">\n                                <GoogleLogin\n                                    clientId={appID.google}\n                                    buttonText=\"Sign in with Google\"\n                                    onSuccess={this.responseGoogle}\n                                    onFailure={this.responseGoogle}\n                                    cookiePolicy={'single_host_origin'}\n                                />\n                            </Col>\n                            <Col md=\"6\" className=\"social-fb\">\n                                <FacebookLogin\n                                    appId=\"1088597931155576\"\n                                    callback={this.responseFacebook}\n                                    render={renderProps => (\n                                        <FacebookLoginButton onClick={renderProps.onClick}>\n                                            <span className=\"socail-btn-txt\">Sign in with Facebook</span>\n                                        </FacebookLoginButton>\n                                    )}\n                                />\n                            </Col> */}\n                            <Col md=\"12\" className=\"text-center mt-4 mb-3\">\n                                <p className=\"social-header\">Don't you have an account? <a href=\"/auth/register\">SIGN UP Now</a></p>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <NotificationContainer />\n                <Loader active={this.props.state.isLoading} />\n            </div>\n        )\n    }\n}\n\nLoginForm.propsTypes = {\n    login: PropTypes.func.isRequired,\n    state: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    login\n}\nconst mapStateToProps = (state) => ({\n    state: state.auth\n})\n\nconst mappedLoginForm = connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n\n\nexport default mappedLoginForm","import React, { Component } from 'react'\nimport Footer from \"components/Footer/Footer.js\";\nimport AuthHeader from './header';\nimport LoginForm from './loginForm';\n\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"auth-wrap\">\n                <AuthHeader />\n                <div className=\"main\">\n                    <LoginForm {...this.props} />\n                </div>\n                <Footer fluid />\n            </div>\n        )\n    }\n}\n\nexport default Login","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Form, Row, Col, FormGroup, Input, Button } from 'reactstrap';\n// import { FacebookLoginButton } from \"react-social-login-buttons\";\n// import PhoneInput from 'react-phone-input-2'\n// import 'react-phone-input-2/lib/style.css';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { register, clearErr } from \"actions/authAction\";\nimport { NotificationContainer } from 'react-notifications';\nimport notify from 'views/utils/notification';\nimport 'react-notifications/lib/notifications.css';\nimport Loader from 'views/utils/loader';\n// import { GoogleLogin } from 'react-google-login';\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n\n// import { appID } from './appParams'\n\nclass RegisterForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                confirmPassword: '',\n                // contactNo: '',\n                // city: '',\n                // state: '',\n                // address1: '',\n                // zip: '',\n            },\n            validPass: true,\n            agreement: false,\n            showTerms: false,\n        }\n    }\n\n    onChange = (e) => {\n        let user = this.state.user;\n        user[e.target.name] = e.target.value;\n        this.setState({ ...this.state, user: user })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        let { user } = this.state\n        if (user.password === user.confirmPassword) {\n            let validPass = this.checkPassword(user.password)\n            if (validPass) {\n                delete user.confirmPassword;\n                this.props.register(user);\n            } else {\n                notify('warning', 'Password must include at least one number, one lowercase and one uppercase letter, should be at least 6 characters', 'Invalid Password', 3000)\n            }\n        } else {\n            notify('error', 'Password does not match.', 'Auth')\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        let { state } = nextProps;\n        if (!state.isLoading && state.errors) {\n            notify('error', state.errors, 'Register')\n            this.props.clearErr()\n        } else if (!state.isLoading && state.status) {\n            notify('success', 'Successfully registered.', 'Register');\n            // window.location.href = '/auth/login'\n        }\n\n    }\n\n    checkTerms = (e) => {\n        this.setState({ ...this.state, agreement: e.target.checked })\n    }\n\n    checkPassword = (str) => {\n        // at least one number, one lowercase and one uppercase letter\n        // at least six characters\n        var re = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n        return re.test(str);\n    }\n\n    responseGoogle = (response) => {\n        let { profileObj } = response;\n        let user = {\n            firstName: profileObj.givenName,\n            lastName: profileObj.familyName,\n            email: profileObj.email,\n            password: profileObj.email,\n        }\n        this.props.register(user);\n    }\n\n    responseFacebook = (response) => {\n        console.log(response);\n    }\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <Card>\n                    <CardHeader className=\"auth-form-header mb-2\">SIGN UP TO GET STARTED</CardHeader>\n                    <CardBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <Row>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>First Name</label>\n                                        <Input name=\"firstName\" type=\"text\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Last Name</label>\n                                        <Input name=\"lastName\" onChange={this.onChange} type=\"text\" required />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"12\">\n                                    <FormGroup>\n                                        <label>Email Address</label>\n                                        <Input name=\"email\" onChange={this.onChange} type=\"email\" required />\n                                    </FormGroup>\n                                </Col>\n                                {/* <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Phone Number</label>\n                                        <PhoneInput\n                                            inputProps={{\n                                                name: 'phone',\n                                                required: true\n                                            }}\n                                            onChange={this.onChange}\n                                        />\n                                    </FormGroup>\n                                </Col> */}\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Password</label>\n                                        <Input name=\"password\" onChange={this.onChange} type=\"password\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"6\">\n                                    <FormGroup>\n                                        <label>Confirm Password</label>\n                                        <Input name=\"confirmPassword\" onChange={this.onChange} type=\"password\" />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row className=\"mt-3\">\n                                <Col md=\"12\" className=\"ml-4\">\n                                    <FormGroup>\n                                        <Input type=\"checkbox\" id=\"agreement\" name=\"agreement\" onChange={this.checkTerms} /> I agree to <span className=\"termsCondition\" onClick={this.props.showTerms}>Terms and Conditions.</span>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row className=\"mt-4\">\n                                <Col md=\"12\" className=\"text-center mb-3\">\n                                    <Button color=\"primary\" type=\"submit\" disabled={!this.state.agreement}>\n                                        SIGN UP\n                                    </Button>\n                                </Col>\n                                <hr style={{ width: '83%' }} />\n                            </Row>\n                        </Form>\n                        <Row>\n                            {/* <Col md=\"12\" className=\"text-center mt-2\">\n                                <p className=\"social-header\">Sign up with social account.</p>\n                            </Col>\n                            <Col md=\"6\" className=\"d-flex social-google\">\n                                <GoogleLogin\n                                    clientId={appID.google}\n                                    buttonText=\"Sign up with Google\"\n                                    onSuccess={this.responseGoogle}\n                                    onFailure={this.responseGoogle}\n                                    cookiePolicy={'single_host_origin'}\n                                />\n                            </Col>\n                            <Col md=\"6\" className=\"social-fb\">\n                                <FacebookLogin\n                                    appId=\"1088597931155576\"\n                                    callback={this.responseFacebook}\n                                    render={renderProps => (\n                                        <FacebookLoginButton onClick={renderProps.onClick}>\n                                            <span className=\"socail-btn-txt\">Sign up with Facebook</span>\n                                        </FacebookLoginButton>\n                                    )}\n                                />\n                            </Col> */}\n                            <Col md=\"12\" className=\"text-center mt-4 mb-3\">\n                                <p className=\"social-header\">Already have an account? <a href=\"/auth/login\">Sign in Now</a></p>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <NotificationContainer />\n                <Loader active={this.props.state.isLoading} />\n            </div>\n        )\n    }\n}\n\n\nRegisterForm.propsTypes = {\n    register: PropTypes.func.isRequired,\n    clearErr: PropTypes.func.isRequired,\n    state: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    register, clearErr\n}\nconst mapStateToProps = (state) => ({\n    state: state.auth\n})\n\nconst mappedRegisterForm = connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\n\n\nexport default mappedRegisterForm","import React, { Component } from 'react'\n\nexport default class TermsAndCondition extends Component {\n    render() {\n        return (\n            <div className=\"term-container ml-auto mr-auto bg-white\">\n                <div className=\"pt-3 text-right mr-3 back-signup-area\">\n                    <h6 className=\"back-signup\"\n                        onClick={this.props.backToSignUp}\n                    >\n                        <i className=\"fas fa-hand-point-left\"></i> Back to SignUp\n                    </h6>\n                </div>\n                <div className=\"mt-3 main-board\">\n                    <div className=\"header pb-2\">LEGAL DISCLAIMER</div>\n                    <div className=\"sub-header p-2\">Terms and Conditions</div>\n                    <div className=\"content\">\n                        These Terms and Conditions of Use (\"Terms and Conditions\") apply to your use of and registration with the website for Eric D. Coleman Financial Group LLC, (the \"Site\"), a website owned and operated by the Eric D. Coleman Financial Group LLC, a Georgia Limited Liability Company.  Please read these Terms and Conditions Before Accessing, Browsing, or Otherwise Using the Site.\n                    </div>\n                    <div className=\"content\">\n                        Your access to, and browsing, review and use of the Site is subject to these Terms and Conditions and all applicable laws.  By accessing and using the Site, you accept these Terms and Conditions, without limitation or qualification. If you do not agree to the Terms and Conditions, do not use the Site.  If, at any time, any part of the Terms and Conditions is no longer acceptable to you, immediately terminate your use of the Site.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Content and Services Contained on This Site\n                    </div>\n                    <div className=\"content\">\n                        All Content and Services on this site shall be considered informational and do not constitute financial planning or otherwise professional advice.\n                    </div>\n                    <div className=\"content\">\n                        You should not act or refrain from acting on the basis of any content included in this site without seeking independent financial planning or other professional advice. The contents of this site contain general information and may not reflect current developments or specifically address your situation. We disclaim all liability for actions you take or fail to take based on any content on this site.\n                    </div>\n                    <div className=\"content\">\n                        The operation of this site does not create a professional relationship between you and the Eric D. Coleman Financial Group LLC.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Right to Change, Modify or Delete the Terms and Conditions\n                    </div>\n                    <div className=\"content\">\n                        the Eric D. Coleman Financial Group LLC reserves the right to change, modify, add or delete portions of the Terms and Conditions at any time, without prior notice.  Please re-review the Terms and Conditions periodically for changes. Your continued use of the Site will mean that you accept such changes or deletions.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Privacy Policy\n                    </div>\n                    <div className=\"content\">\n                        Please refer to the Eric D. Coleman Financial Group LLC Privacy Policy for information regarding the Company's collection, use, and storage of users' information.\n                    </div>\n                    <div className=\"content\">\n                        Upon registering with this Site, the Company will require you to submit some personal data, including your name, email address, phone number, and etc.  This information is collected directly from your input when registering for the Company’s services or to receive additional information pertaining to the service provided by the Company.  Information may be captured by your browser’s cookies. The data that is collected is used to process your order and/or service subscription; to manage your account; provide you with notice of special offers and new products offered by the company; and etc. Data is stored at the Company’s headquarters in Georgia, safeguarded with standard industry security protocol.\n                    </div>\n                    <div className=\"content\">\n                        Upon registering with this Site, the Company will require you to submit some personal data, including your name, email address, phone number, and etc.  This information is collected directly from your input when registering for the Company’s services or to receive additional information pertaining to the service provided by the Company.  Information may be captured by your browser’s cookies. The data that is collected is used to process your order and/or service subscription; to manage your account; provide you with notice of special offers and new products offered by the company; and etc. Data is stored at the Company’s headquarters in Georgia, safeguarded with standard industry security protocol.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Use of Site Content\n                    </div>\n                    <div className=\"content\">\n                        This Site and all the information it contains, or may in the future contain, including, but not limited to, articles, memoranda, bulletins, reports, press releases, opinions, text, directories, guides, photographs, illustrations, trademarks, trade names, service marks and logos (collectively, the \"Content\"), is the property of the Eric D. Coleman Financial Group LLC, and is protected from unauthorized copying and dissemination by U.S. Copyright law, trademark law, international conventions, and other intellectual property laws.  Nothing contained on this Site should be construed as granting, by implication, estoppel, or otherwise, any license or right to use this Site or any Content displayed on this Site, through the use of framing or otherwise, without the prior written permission of the Eric D. Coleman Financial Group LLC or such third party that may own the trademark or copyright of material displayed on this Site.\n                    </div>\n                    <div className=\"content\">\n                        Subject to your full compliance with these terms, the Eric D. Coleman Financial Group LLC authorizes you to view and make use of the Content.  You may print the applicable content, but only for your own lawful, personal, noncommercial use, provided that you maintain all copyright, trademark and other intellectual property notices contained in such Content, and provided that the Content, or any part thereof, is not modified.  Unlawful commercial usage or dissemination or distribution of the Content shall be considered a breach of the use of this site; moreover, you will be subjected to liquidated damages of $100,000 and any other damages available to the Company.\n                    </div>\n                    <div className=\"sub-header p-2\">Prohibited Conduct</div>\n                    <div className=\"content\">\n                        You may use the Site for lawful purposes only. You may not upload to, or distribute or otherwise publish through the Site, any Content that is any of the following:\n                        <ul>\n                            <li>\n                                is libelous, defamatory, obscene, pornographic, abusive, harassing or threatening, or otherwise objectionable to the Eric D. Coleman Financial Group LLC in the Company's sole discretion;\n                            </li>\n                            <li>\n                                contains computer viruses, worms, moles or other contaminating or destructive elements;\n                            </li>\n                            <li>\n                                violates the rights of others, such as Content that infringes any copyright, trademark, patent, trade secret or violates any right of privacy or publicity;\n                            </li>\n                            <li>contains any false or misleading statement;</li>\n                            <li>contains advertising; or, </li>\n                            <li>otherwise violates any applicable criminal or civil law.</li>\n                        </ul>\n                    </div>\n                    <div className=\"content\">\n                        You may not use the Site for any commercial purpose and may not distribute over the Site any solicitation of funds, goods and services. In addition, you may not use the Site to solicit subscribers to join other online information services that are competitive with the Site.\n                    </div>\n                    <div className=\"sub-header p-2\">Subscriber Qualifications</div>\n                    <div className=\"content\">\n                        When registering with or applying to the Eric D. Coleman Financial Group LLC you must provide accurate, complete, and current registration information and you agree to provide the Company with any updates to that information promptly after such changes occur.\n                    </div>\n                    <div className=\"content\">\n                        Individual subscriptions to the Site are available only to persons who are at least 18 years of age.  Minors may only receive access keys or user id/passwords only as part of an authorized group or authorized adult subscription. Your right to use the Site is personal to you and cannot be transferred to any other person.\n                    </div>\n                    <div className=\"content\">\n                        You shall be responsible for obtaining communication services, computer equipment and other products or services necessary to access and use the Site. You shall be responsible for all charges associated with accessing and maintaining a connection to the Site including, but not limited to, charges imposed by an Internet service provider, or your local telephone company.\n                    </div>\n                    <div className=\"sub-header p-2\">Third Parties</div>\n                    <div className=\"content\">\n                        the Eric D. Coleman Financial Group LLC may provide you with links to third party Web sites, and some of the Content appearing to originate from the Site may be supplied by third party Content providers.  the Eric D. Coleman Financial Group LLC has no responsibility for these third-party Web sites, which are governed by the terms of use and privacy policies, if any, of the applicable third-party Content providers.\n                    </div>\n                    <div className=\"sub-header p-2\">Access to and Availability of the Site</div>\n                    <div className=\"content\">\n                        The Site may become unavailable to you as a result of maintenance, malfunction of computer hardware or software, or for other reasons, and may result in damages to your systems or operations.  You shall be solely responsible for ensuring that any information or content obtained from the Site does not contain any virus, worm, mole or other computer software code or subroutine designed to disable, erase, impair or otherwise damage your systems, software, or data.\n                    </div>\n                    <div className=\"sub-header p-2\">Restriction, Suspension or Termination</div>\n                    <div className=\"content\">\n                        The Eric D. Coleman Financial Group LLC reserves the right, in its sole discretion, to restrict, suspend or terminate your access to all or any part of the Site at any time for any reason without prior notice or liability and without any obligation to refund any portion of fees paid for any product or service.\n                    </div>\n                    <div className=\"content\">\n                        The Eric D. Coleman Financial Group LLC may change, suspend or discontinue all or any aspect of the Site at any time, including the availability of any Site feature, database, or content, without prior notice or liability.\n                    </div>\n                    <div className=\"header pt-3 pb-2\">ADVERTISING</div>\n                    <div className=\"content\">\n                        This website may contain some financial planning advertising. Prior results do not guarantee a similar outcome for you.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Disclaimer of Warranties\n                    </div>\n                    <div className=\"content\">\n                        THE SITE AND THE CONTENT ARE DISTRIBUTED ON AN \"AS IS, AS AVAILABLE\" BASIS. NEITHER THE ERIC D. COLEMAN FINANCIAL GROUP LLC, THIRD PARTY CONTENT PROVIDERS NOR THEIR RESPECTIVE AGENTS MAKE ANY WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE OR IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, WITH RESPECT TO THE SITE, ANY CONTENT OR ANY PRODUCTS OR SERVICES SOLD OR DISTRIBUTED THROUGH THE SITE.  YOU EXPRESSLY AGREE THAT THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SITE AND THE ACCURACY OR COMPLETENESS OF THE CONTENT IS ASSUMED SOLELY BY YOU. NEITHER THE ERIC D. COLEMAN FINANCIAL GROUP LLC NOR ANY PROVIDER OF THIRD PARTY CONTENT OR THEIR RESPECTIVE AGENTS WARRANTS THAT THE SITE WILL BE UNINTERRUPTED OR ERROR-FREE; NOR DOES THE ERIC D. COLEMAN FINANCIAL GROUP LLC, ANY THIRD PARTY CONTENT PROVIDER, OR THEIR RESPECTIVE AGENTS MAKE ANY WARRANTY AS TO THE RESULTS TO BE OBTAINED FROM USE OF THE SITE OR THE CONTENT.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Limitation of Liability\n                    </div>\n                    <div className=\"content\">\n                        UNDER NO CIRCUMSTANCES SHALL THE ERIC D. COLEMAN FINANCIAL GROUP LLC NOR ANY THIRD PARTY CONTENT PROVIDER NOR THEIR RESPECTIVE PREDECESSORS, SUCCESSORS, PARENTS, SUBSIDIARIES, AFFILIATES, PAST OR PRESENT OFFICERS, DIRECTORS, SHAREHOLDERS, INVESTORS, EMPLOYEES, AGENTS, REPRESENTATIVES ATTORNEYS, LICENSORS OR INFORMATION PROVIDERS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OF OR INABILITY TO USE THE SITE, EVEN IF SUCH PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW EXCLUSION OF IMPLIED WARRANTIES OR LIMITATION OF LIABILITY FOR INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THE ABOVE LIMITATIONS OR EXCLUSIONS MAY NOT APPLY TO YOU. IN SUCH STATES, THE LIABILITY OF THE ILLUMINATE CONSULTING GROUP, THIRD PARTY CONTENT PROVIDERS AND THEIR RESPECTIVE AGENTS SHALL BE LIMITED TO THE GREATEST EXTENT PERMITTED BY LAW.\n                    </div>\n                    <div className=\"sub-header p-2\">\n                        Indemnification\n                    </div>\n                    <div className=\"content\">\n                        You hereby agree to indemnify, defend and hold the Eric D. Coleman Financial Group LLC, and all of its predecessors, successors, parents, subsidiaries, affiliates, and past and present officers, directors, shareholders, investors, employees, agents, information providers, attorneys, representatives licensors and information providers (collectively, the \" the Eric D. Coleman Financial Group LLC Representatives\") harmless from and against any and all liability, losses, costs and expenses (including attorneys' fees) incurred by the Eric D. Coleman Financial Group LLC or any the Eric D. Coleman Financial Group LLC Representative in connection with any claim arising out of any use or alleged use by you of this site or arising out of or in relation to any breach by you of the Terms and conditions, or the representations, warranties and covenants you made by agreeing to these Terms and Conditions.  the Eric D. Coleman Financial Group LLC reserves the right, at its own expense, to assume the exclusive defense and control of any matter otherwise subject to indemnification by you, and in such case, you agree to cooperate reasonably with the Eric D. Coleman Financial Group LLC’s defense of such claim.\n                    </div>\n                    <div className=\"sub-header p-2\">Choice of Law</div>\n                    <div className=\"content\">\n                        The Terms and Conditions shall be construed in accordance with the laws of the State of Georgia, without regard to conflict of laws principles.\n                    </div>\n                    <div className=\"sub-header p-2\">Entire Agreement</div>\n                    <div className=\"content\">\n                        The Terms and Conditions constitute the entire agreement between the parties with respect to the subject matter hereof and supersede all previous written or oral agreements between the parties with respect to such subject matter.\n                    </div>\n                    <div className=\"sub-header p-2\">No Amendment or Waiver</div>\n                    <div className=\"content\">\n                        The Terms and Conditions may not be amended except in writing signed by both parties and no waiver by either party shall be deemed a waiver of any preceding or subsequent breach or default, unless such a waiver is in writing and signed by an authorized representative of the Eric D. Coleman Financial Group LLC.\n                    </div>\n                    <div className=\"sub-header p-2\">Copyright</div>\n                    <div className=\"content\">\n                        Copyright © 2020, the Eric D. Coleman Financial Group LLC. All rights reserved.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Footer from \"components/Footer/Footer.js\";\nimport AuthHeader from './header'\nimport RegisterForm from './registerForm';\nimport TermsAndCondition from './termsCondition';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showTerms: false\n        }\n    }\n\n    showTerms = () => {\n        this.setState({ ...this.state, showTerms: true })\n    }\n    backToSignUp = () => {\n        this.setState({ ...this.state, showTerms: false })\n    }\n    render() {\n        return (\n            <div className=\"auth-wrap\">\n                <AuthHeader />\n                {this.state.showTerms ?\n                    (<div className=\"term-condition\">\n                        <TermsAndCondition backToSignUp={this.backToSignUp} />\n                    </div>)\n                    :\n                    (<div className=\"main\">\n                        <RegisterForm showTerms={this.showTerms} />\n                    </div>)\n                }\n\n                <Footer fluid />\n            </div>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader, Form, Row, Col, FormGroup, Input, Button } from 'reactstrap';\n\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { resetpwd } from \"actions/authAction\";\nimport Loader from 'views/utils/loader';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport notify from 'views/utils/notification';\n\nclass ResetpwdForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: ''\n        }\n    }\n\n    onSubmit = (e) => {\n        // console.log(this.state);\n        e.preventDefault();\n        this.props.resetpwd(this.state)\n    }\n\n    onChange = (e) => {\n        let email = e.target.value\n        this.setState({ email: email })\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        let { state } = nextProps;\n        console.log(\"ResetpwdForm -> UNSAFE_componentWillReceiveProps -> state\", state)\n        if (!state.isLoading && state.status) {\n            notify('success', state.message, 'Reset Password')\n        }\n        if (!state.isLoading && !state.status) {\n            notify('error', state.errors, 'Reset password')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <Card>\n                    <CardHeader className=\"auth-form-header mb-2\">Please insert email adress to reset password</CardHeader>\n                    <CardBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <Row>\n                                <Col md=\"12\">\n                                    <FormGroup>\n                                        <label>Email Address</label>\n                                        <Input name='username' type=\"email\" onChange={this.onChange} required />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row className=\"mt-4\">\n                                <Col md=\"12\" className=\"text-center mb-2\">\n                                    <Button color=\"primary\" type=\"submit\">\n                                        RESET PASSWORD\n                                    </Button>\n                                </Col>\n                                <Col md=\"12\" className=\"text-center mt-2 mb-1\">\n                                    <p className=\"social-header\"><a href=\"/auth/login\">Go To LOG IN</a></p>\n                                </Col>\n                                <hr style={{ width: '83%' }} />\n                            </Row>\n                        </Form>\n                    </CardBody>\n                </Card>\n                <NotificationContainer />\n                <Loader active={this.props.state.isLoading} />\n            </div>\n        )\n    }\n}\n\nResetpwdForm.propsTypes = {\n    resetpwd: PropTypes.func.isRequired,\n    state: PropTypes.object.isRequired\n}\n\nconst mapDispatchToProps = {\n    resetpwd\n}\nconst mapStateToProps = (state) => ({\n    state: state.auth\n})\n\nconst mappedResetpwdForm = connect(mapStateToProps, mapDispatchToProps)(ResetpwdForm)\n\nexport default mappedResetpwdForm","import React, { Component } from 'react'\nimport AuthHeader from '../header';\nimport ResetpwdForm from './resetpwdForm';\nimport Footer from \"components/Footer/Footer.js\";\n\nexport default class ResetPwd extends Component {\n    render() {\n        return (\n            <div className=\"auth-wrap\">\n                <AuthHeader />\n                <div className=\"main\">\n                    <ResetpwdForm />\n                </div>\n                <Footer fluid />\n            </div>\n        )\n    }\n}\n","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    title: '',\n    show: false,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.TOGGLE_MODAL:\n            return {\n                ...state,\n            }\n        case types.OPEN_MODAL:\n            return {\n                ...state,\n                show: action.payload.show,\n                title: action.payload.title,\n                data: action.payload.data\n            }\n        case types.CLOSE_MODAL:\n            return {\n                ...state,\n                show: action.payload.show,\n                title: action.payload.title\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    isLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case types.LOGIN_SUCCESS:\n            console.log(action);\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                isLoading: false\n            }\n        case types.LOGIN_FAILED:\n            return {\n                ...state,\n                status: false,\n                isLoading: false,\n                errors: action.payload.message\n            }\n        case types.REGISTER_REQUEST:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case types.REGISTER_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                isLoading: false\n            }\n        case types.REGISTER_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload.message,\n                isLoading: false\n            }\n        case types.RESET_PWD_REQUEST:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case types.RESET_PWD_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                message: action.payload.message,\n                isLoading: false\n            }\n        case types.RESET_PWD_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload.message,\n                isLoading: false\n            }\n        case types.CLRERR:\n            return {\n                ...state,\n                errors: ''\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    loading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.LOADING_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case types.LOADING_END:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_ASSETS_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_ASSETS_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_INCOME_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_INCOME_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_EXPENDITURE_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_EXPENDITURE_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CREDITOR_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_CREDITOR_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_TYPES_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_TYPES_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_NET_WORTH_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_NET_WORTH_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CASH_FLOW_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_CASH_FLOW_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: []\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: {}\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_DASHBOARD_DATA_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload\n            }\n        case types.GET_DASHBOARD_DATA_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                data: {}\n            }\n        default:\n            return state;\n    }\n}","import * as types from 'actions/actionConstants';\n\nconst initialState = {\n    status: false,\n    errors: '',\n    data: {}\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.GET_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                status: true,\n                errors: '',\n                data: action.payload.data\n            }\n        case types.GET_CUSTOMER_FAILED:\n            return {\n                ...state,\n                status: false,\n                errors: action.payload,\n                isLoading: false,\n                data: {}\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport ToggleModal from './modalReducer'\nimport auth from './authReducer';\nimport defaultReducer from './default';\nimport Assets from './assetsReduder';\nimport Income from './incomeReducer';\nimport Expenditure from './expenditureReducer';\nimport Creditor from './creditorReducer';\nimport Types from './typeReducer';\nimport NetWorth from './netWorthReducer';\nimport cashFlow from './cashFlowReducer';\nimport DashBoard from './dashboardReducer';\nimport customer from './customerReducer';\n\nexport default combineReducers({\n    default: defaultReducer,\n    modal: ToggleModal,\n    auth: auth,\n    assets: Assets,\n    income: Income,\n    expenditure: Expenditure,\n    creditor: Creditor,\n    types: Types,\n    netWorth: NetWorth,\n    cashFlow: cashFlow,\n    DashBoard: DashBoard,\n    customer: customer\n})","import { takeLatest, put, call, takeEvery } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\nimport axios from 'axios';\nimport env from '../services/env';\nimport { REGISTER_SUCCESS } from \"actions/actionConstants\";\nimport { REGISTER_FAILED } from \"actions/actionConstants\";\nimport { RESET_PWD_REQUEST } from \"actions/actionConstants\";\nimport { RESET_PWD_FAILED } from \"actions/actionConstants\";\nimport { RESET_PWD_SUCCESS } from \"actions/actionConstants\";\n\n\nfunction authApi(user, type) {\n    let endpoint = ''\n    if (type === 'forgotpwd') {\n        endpoint = `customer/forgot-password/${user.email}`\n    } else {\n        endpoint = type === 'login' ? 'auth/login' : 'customer/signup';\n    }\n    let config = {\n        method: 'post',\n        url: `${env.BASE_URL}${endpoint}`,\n        headers: {\n            'X-Requested-With': `XMLHttpRequest`,\n            'Content-Type': 'application/json',\n        },\n        data: type !== 'forgotpwd' ? JSON.stringify(user) : {}\n    }\n    return axios(config).then((result) => {\n        return result.data\n    }).catch((err) => {\n        throw err\n    });\n}\nfunction* login(payload) {\n    try {\n        let token = yield call(authApi, payload.user, 'login');\n        localStorage.setItem('token', JSON.stringify(token));\n        yield put({ type: types.LOGIN_SUCCESS });\n        window.location.href = ('/')\n    } catch (error) {\n        localStorage.removeItem('token')\n        yield put({ type: types.LOGIN_FAILED, payload: { message: 'Invalid Email or Password' } })\n        // return false\n    }\n}\n\nfunction logout() {\n    localStorage.removeItem('token');\n    window.location.href = '/auth/login'\n}\n\nfunction* register(payload) {\n    try {\n        let response = yield call(authApi, payload.user, 'signup');\n        if (response && response.showMessage) {\n            yield put({ type: REGISTER_SUCCESS });\n            let user = {\n                username: payload.user.email,\n                password: payload.user.password\n            }\n            yield put({ type: types.LOGIN_REQUEST, user })\n        } else {\n            yield put({ type: REGISTER_FAILED, payload: { message: response } })\n        }\n\n    } catch (error) {\n        yield put({ type: REGISTER_FAILED, payload: { message: error.message } })\n    }\n}\n\nfunction* resetpwd(payload) {\n    try {\n        let { email } = payload;\n        let response = yield call(authApi, email, 'forgotpwd')\n        if (response.status === 'success') {\n            yield put({ type: RESET_PWD_SUCCESS, payload: { message: response.showMessage } })\n        } else if (response.status === 'fail') {\n            yield put({ type: RESET_PWD_FAILED, payload: { message: response.showMessage } })\n        }\n    } catch (error) {\n        yield put({ type: RESET_PWD_FAILED })\n    }\n}\nfunction* authActionWatcher() {\n    yield takeLatest(types.LOGIN_REQUEST, login)\n    yield takeLatest(types.REGISTER_REQUEST, register)\n    yield takeLatest(RESET_PWD_REQUEST, resetpwd)\n    yield takeEvery(types.LOGOUT, logout);\n}\n\nexport default authActionWatcher","import axios from 'axios';\nimport env from './env';\n\nclass ServiceUtils {\n\n    ApiGET(endpoint) {\n        let token = localStorage.getItem('token')\n        if (!token) {\n            return window.location.href = '/auth/login'\n        }\n        token = JSON.parse(token).token;\n        const url = `${env.BASE_URL}${endpoint}`;\n        let config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Authorization': `Bearer ${token}`\n            }\n        }\n\n        return axios.get(url, config).then((result) => {\n            return result.data\n        }).catch((err) => {\n            if (err.message === 'Request failed with status code 401') {\n                localStorage.removeItem('token')\n                window.location.href = '/auth/login'\n                return\n            }\n            throw err\n        });\n    }\n\n    ApiPOST(endpoint, payload) {\n        let token = localStorage.getItem('token')\n        if (!token) {\n            return window.location.href = '/auth/login'\n        }\n        token = JSON.parse(token).token;\n        const url = `${env.BASE_URL}${endpoint}`;\n        let config = {\n            method: 'post',\n            url: url,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Authorization': `Bearer ${token}`\n            },\n            data: JSON.stringify(payload)\n        }\n\n        return axios(config).then((result) => {\n            return result.data\n        }).catch((err) => {\n            if (err.message === 'Request failed with status code 401') {\n                localStorage.removeItem('token')\n                window.location.href = '/auth/login'\n                return\n            }\n            throw err\n        });\n    }\n\n    ApiPUT(endpoint, payload) {\n        let token = localStorage.getItem('token')\n        if (!token) {\n            return window.location.href = '/auth/login'\n        }\n        token = JSON.parse(token).token;\n        const url = `${env.BASE_URL}${endpoint}`;\n        let config = {\n            method: 'put',\n            url: url,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Authorization': `Bearer ${token}`\n            },\n            data: JSON.stringify(payload)\n        }\n\n        return axios(config).then((result) => {\n            return result.data\n        }).catch((err) => {\n            if (err.message === 'Request failed with status code 401') {\n                localStorage.removeItem('token')\n                window.location.href = '/auth/login'\n                return\n            }\n            throw err\n        });\n    }\n\n    ApiDELETE(endpoint) {\n        let token = localStorage.getItem('token')\n        if (!token) {\n            return window.location.href = '/auth/login'\n        }\n        token = JSON.parse(token).token;\n        const url = `${env.BASE_URL}${endpoint}`;\n        let config = {\n            method: 'delete',\n            url: url,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Authorization': `Bearer ${token}`\n            },\n        }\n\n        return axios(config).then((result) => {\n            return result.data\n        }).catch((err) => {\n            if (err.message === 'Request failed with status code 401') {\n                localStorage.removeItem('token')\n                window.location.href = '/auth/login'\n                return\n            }\n            throw err\n        });\n    }\n}\n\nexport default ServiceUtils;","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_ASSETS_SUCCESS,\n    GET_ASSETS_REQUEST,\n    CREATE_ASSETS_REQUEST,\n    CREATE_ASSETS_FAILED,\n    LOADING_END,\n    LOADING_START,\n    GET_ASSETS_FAILED,\n    DELETE_ASSETS_REQUEST,\n    DELETE_ASSETS_FAILED,\n    DELETE_ASSETS_SUCCESS,\n    EDIT_ASSETS_REQUEST,\n    EDIT_ASSETS_SUCCESS,\n    EDIT_ASSETS_FAILED\n} from \"actions/actionConstants\";\nimport notify from 'views/utils/notification';\n\nlet service = new serviceUtls();\n\nfunction* getAssets() {\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, 'asset');\n        yield put({ type: types.GET_TYPES_REQUEST, category: 'asset' })\n        if (data.status === 'success') {\n            yield put({ type: GET_ASSETS_SUCCESS, payload: { data: data.result } })\n        } else {\n            yield put({ type: GET_ASSETS_FAILED, payload: data.showMessage })\n        }\n        yield put({ type: LOADING_END });\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: GET_ASSETS_FAILED, payload: error })\n    }\n}\n\nfunction* createAssets(asset) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPOST, 'asset', asset.data)\n        yield put({ type: GET_ASSETS_REQUEST });\n        notify('success', 'Successfully Added', 'Assets');\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: CREATE_ASSETS_FAILED, payload: error })\n        notify('error', error, 'ADding Assets')\n    }\n}\n\nfunction* deleteAsset(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiDELETE, `asset/${payload.id}`)\n        yield put({ type: DELETE_ASSETS_SUCCESS });\n        yield put({ type: GET_ASSETS_REQUEST });\n        notify('success', 'Successfully removed', 'Assets');\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: DELETE_ASSETS_FAILED, payload: error });\n        yield put({ type: GET_ASSETS_REQUEST });\n        notify('error', error, 'Deleting Assets')\n    }\n}\n\nfunction* editAsset(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        let data = yield call(service.ApiPUT, `asset`, payload.data)\n        console.log(\"function*editAsset -> data\", data)\n        yield put({ type: EDIT_ASSETS_SUCCESS });\n        yield put({ type: GET_ASSETS_REQUEST });\n        notify('success', 'Successfully Updated', 'Assets')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: EDIT_ASSETS_FAILED, payload: error });\n        yield put({ type: GET_ASSETS_REQUEST });\n        notify('error', error, 'Editing Assets')\n    }\n}\n\nfunction* assetsActionWatcher() {\n    yield takeLatest(types.GET_ASSETS_REQUEST, getAssets)\n    yield takeLatest(CREATE_ASSETS_REQUEST, createAssets)\n    yield takeLatest(DELETE_ASSETS_REQUEST, deleteAsset)\n    yield takeLatest(EDIT_ASSETS_REQUEST, editAsset)\n}\n\nexport default assetsActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_INCOME_SUCCESS,\n    GET_INCOME_REQUEST,\n    CREATE_INCOME_REQUEST,\n    CREATE_INCOME_FAILED,\n    LOADING_END,\n    LOADING_START,\n    GET_INCOME_FAILED,\n    DELETE_INCOME_REQUEST,\n    DELETE_INCOME_FAILED,\n    DELETE_INCOME_SUCCESS\n} from \"actions/actionConstants\";\nimport notify from 'views/utils/notification';\nimport { EDIT_INCOME_REQUEST } from \"actions/actionConstants\";\nimport { EDIT_INCOME_SUCCESS } from \"actions/actionConstants\";\nimport { EDIT_INCOME_FAILED } from \"actions/actionConstants\";\n\nlet service = new serviceUtls();\n\nfunction* getIncomes() {\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, 'income');\n        yield put({ type: types.GET_TYPES_REQUEST, category: 'income' })\n        yield put({ type: LOADING_END });\n        yield put({ type: GET_INCOME_SUCCESS, payload: { data: data.result } })\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: GET_INCOME_FAILED, payload: error })\n    }\n}\n\nfunction* createIncome(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPOST, 'income', payload.data)\n        yield put({ type: GET_INCOME_REQUEST })\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: CREATE_INCOME_FAILED, payload: error })\n    }\n}\n\nfunction* deleteIncome(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiDELETE, `income/${payload.id}`)\n        yield put({ type: DELETE_INCOME_SUCCESS });\n        yield put({ type: GET_INCOME_REQUEST });\n        notify('success', 'Successfully removed', 'Incomes')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: DELETE_INCOME_FAILED, payload: error });\n        yield put({ type: GET_INCOME_REQUEST });\n        notify('error', error, 'Deleting Incomes')\n    }\n}\n\nfunction* editIncome(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPUT, `income`, payload.data)\n        yield put({ type: EDIT_INCOME_SUCCESS });\n        yield put({ type: GET_INCOME_REQUEST });\n        notify('success', 'Successfully Updated', 'Incomes')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: EDIT_INCOME_FAILED, payload: error });\n        yield put({ type: GET_INCOME_REQUEST });\n        notify('error', error, 'Editing Incomes')\n    }\n}\n\nfunction* IncomesActionWatcher() {\n    yield takeLatest(types.GET_INCOME_REQUEST, getIncomes)\n    yield takeLatest(CREATE_INCOME_REQUEST, createIncome)\n    yield takeLatest(DELETE_INCOME_REQUEST, deleteIncome)\n    yield takeLatest(EDIT_INCOME_REQUEST, editIncome)\n}\n\nexport default IncomesActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_EXPENDITURE_SUCCESS,\n    GET_EXPENDITURE_REQUEST,\n    CREATE_EXPENDITURE_REQUEST,\n    CREATE_EXPENDITURE_FAILED,\n    LOADING_END,\n    LOADING_START,\n    GET_EXPENDITURE_FAILED,\n    DELETE_EXPENDITURE_REQUEST,\n    DELETE_EXPENDITURE_FAILED,\n    DELETE_EXPENDITURE_SUCCESS,\n    EDIT_EXPENDITURE_REQUEST,\n    EDIT_EXPENDITURE_SUCCESS,\n    EDIT_EXPENDITURE_FAILED\n} from \"actions/actionConstants\";\nimport notify from 'views/utils/notification';\n\nlet service = new serviceUtls();\n\nfunction* getExpenditure() {\n    try {\n        yield put({ type: LOADING_START })\n        yield put({ type: types.GET_TYPES_REQUEST, category: 'expenditure' })\n        let data = yield call(service.ApiGET, 'expenditure');\n        yield put({ type: GET_EXPENDITURE_SUCCESS, payload: { data: data.result } })\n        yield put({ type: LOADING_END });\n    } catch (error) {\n        yield put({ type: LOADING_END });\n        yield put({ type: GET_EXPENDITURE_FAILED, payload: error });\n    }\n}\n\nfunction* createExpenditure(expenditure) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPOST, 'expenditure', expenditure.data)\n        yield put({ type: GET_EXPENDITURE_REQUEST })\n        notify('success', 'Successfully Added', 'Expenditure')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: CREATE_EXPENDITURE_FAILED, payload: error })\n        notify('error', error, 'Adding Expenditure')\n    }\n}\n\nfunction* deleteexpenditure(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiDELETE, `expenditure/${payload.id}`)\n        yield put({ type: DELETE_EXPENDITURE_SUCCESS });\n        yield put({ type: GET_EXPENDITURE_REQUEST });\n        notify('success', 'Successfully removed', 'Expenditure')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: DELETE_EXPENDITURE_FAILED, payload: error });\n        yield put({ type: GET_EXPENDITURE_REQUEST });\n        notify('error', error, 'Deleting Expenditure')\n    }\n}\n\nfunction* editexpenditure(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPUT, `expenditure`, payload.data)\n        yield put({ type: EDIT_EXPENDITURE_SUCCESS });\n        yield put({ type: GET_EXPENDITURE_REQUEST });\n        notify('success', 'Successfully Updated', 'Expenditure')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: EDIT_EXPENDITURE_FAILED, payload: error });\n        yield put({ type: GET_EXPENDITURE_REQUEST });\n        notify('error', error, 'Editing Expenditure')\n    }\n}\n\nfunction* ExpenditureActionWatcher() {\n    yield takeLatest(types.GET_EXPENDITURE_REQUEST, getExpenditure)\n    yield takeLatest(CREATE_EXPENDITURE_REQUEST, createExpenditure)\n    yield takeLatest(DELETE_EXPENDITURE_REQUEST, deleteexpenditure)\n    yield takeLatest(EDIT_EXPENDITURE_REQUEST, editexpenditure)\n}\n\nexport default ExpenditureActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_CREDITOR_SUCCESS,\n    GET_CREDITOR_REQUEST,\n    CREATE_CREDITOR_REQUEST,\n    CREATE_CREDITOR_FAILED,\n    LOADING_END,\n    LOADING_START,\n    GET_CREDITOR_FAILED,\n    DELETE_CREDITOR_REQUEST,\n    DELETE_CREDITOR_FAILED,\n    DELETE_CREDITOR_SUCCESS,\n    EDIT_CREDITOR_REQUEST,\n    EDIT_CREDITOR_SUCCESS,\n    EDIT_CREDITOR_FAILED\n} from \"actions/actionConstants\";\nimport notify from 'views/utils/notification';\n\nlet service = new serviceUtls();\n\nfunction* getCreditor() {\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, 'creditor');\n        yield put({ type: types.GET_TYPES_REQUEST, category: 'creditor' })\n        if (data.status === 'success') {\n            yield put({ type: GET_CREDITOR_SUCCESS, payload: { data: data.result } })\n        } else {\n            yield put({ type: GET_CREDITOR_FAILED, payload: data.showMessage })\n        }\n        yield put({ type: LOADING_END });\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: GET_CREDITOR_FAILED, payload: error })\n    }\n}\n\nfunction* createCreditor(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        let result = yield call(service.ApiPOST, 'creditor', payload.data)\n        yield put({ type: GET_CREDITOR_REQUEST });\n        if (result.id) {\n            notify('success', 'Successfully Added', 'Creditor');\n        } else {\n            notify('error', result, 'Creditor')\n        }\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: CREATE_CREDITOR_FAILED, payload: error })\n        notify('error', error, 'ADding Creditor')\n    }\n}\n\nfunction* deletecreditor(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiDELETE, `creditor/${payload.id}`)\n        yield put({ type: DELETE_CREDITOR_SUCCESS });\n        yield put({ type: GET_CREDITOR_REQUEST });\n        notify('success', 'Successfully removed', 'Creditor');\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: DELETE_CREDITOR_FAILED, payload: error });\n        yield put({ type: GET_CREDITOR_REQUEST });\n        notify('error', error, 'Deleting Creditor')\n    }\n}\n\nfunction* editcreditor(payload) {\n    try {\n        yield put({ type: LOADING_START });\n        yield call(service.ApiPUT, `creditor`, payload.data)\n        yield put({ type: EDIT_CREDITOR_SUCCESS });\n        yield put({ type: GET_CREDITOR_REQUEST });\n        notify('success', 'Successfully Updated', 'Creditor')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: EDIT_CREDITOR_FAILED, payload: error });\n        yield put({ type: GET_CREDITOR_REQUEST });\n        notify('error', error, 'Editing Creditor')\n    }\n}\n\nfunction* CreditorActionWatcher() {\n    yield takeLatest(types.GET_CREDITOR_REQUEST, getCreditor)\n    yield takeLatest(CREATE_CREDITOR_REQUEST, createCreditor)\n    yield takeLatest(DELETE_CREDITOR_REQUEST, deletecreditor)\n    yield takeLatest(EDIT_CREDITOR_REQUEST, editcreditor)\n}\n\nexport default CreditorActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_TYPES_SUCCESS,\n    GET_TYPES_REQUEST,\n    GET_TYPES_FAILED,\n} from \"actions/actionConstants\";\n\nlet service = new serviceUtls();\n\nfunction* getTypes(payload) {\n    try {\n        let data = yield call(service.ApiGET, `type/get/${payload.category}`);\n        yield put({ type: GET_TYPES_SUCCESS, payload: { data: data.result } })\n    } catch (error) {\n        yield put({ type: GET_TYPES_FAILED, payload: error })\n    }\n}\n\n\nfunction* typesActionWatcher() {\n    yield takeLatest(GET_TYPES_REQUEST, getTypes)\n}\n\nexport default typesActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_NET_WORTH_SUCCESS,\n    GET_NET_WORTH_REQUEST,\n    GET_NET_WORTH_FAILED,\n    LOADING_START,\n    LOADING_END\n} from \"actions/actionConstants\";\n\nlet service = new serviceUtls();\n\nfunction* getNetWorth() {\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, `personal-net-worth`);\n        yield put({ type: GET_NET_WORTH_SUCCESS, payload: { data: data.result } })\n        yield put({ type: LOADING_END })\n    } catch (error) {\n        yield put({ type: GET_NET_WORTH_FAILED, payload: error })\n        yield put({ type: LOADING_END })\n    }\n}\n\n\nfunction* NetWorthActionWatcher() {\n    yield takeLatest(GET_NET_WORTH_REQUEST, getNetWorth)\n}\n\nexport default NetWorthActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_CASH_FLOW_SUCCESS,\n    GET_CASH_FLOW_REQUEST,\n    GET_CASH_FLOW_FAILED,\n    LOADING_START,\n    LOADING_END\n} from \"actions/actionConstants\";\n\nlet service = new serviceUtls();\n\nfunction* getCashFlow(payload) {\n    let { date } = payload;\n    let endpoint = date.start ? `cash-flow?from=${date.start}&to=${date.end}` : `cash-flow`\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, endpoint);\n        yield put({ type: GET_CASH_FLOW_SUCCESS, payload: { data: data.result } })\n        yield put({ type: LOADING_END })\n    } catch (error) {\n        yield put({ type: GET_CASH_FLOW_FAILED, payload: error })\n        yield put({ type: LOADING_END })\n    }\n}\n\n\nfunction* CashFlowActionWatcher() {\n    yield takeLatest(GET_CASH_FLOW_REQUEST, getCashFlow)\n}\n\nexport default CashFlowActionWatcher","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_DASHBOARD_DATA_SUCCESS,\n    GET_DASHBOARD_DATA_REQUEST,\n    GET_DASHBOARD_DATA_FAILED,\n    LOADING_START,\n    LOADING_END\n} from \"actions/actionConstants\";\n\nlet service = new serviceUtls();\n\nfunction* getDashboardData() {\n    try {\n        yield put({ type: LOADING_START })\n        let assets = yield call(service.ApiGET, 'asset');\n        let cashFlow = yield call(service.ApiGET, `cash-flow`);\n        let creditor = yield call(service.ApiGET, 'creditor');\n        let expenditure = yield call(service.ApiGET, 'expenditure');\n        let income = yield call(service.ApiGET, 'income');\n        let personalNetWorth = yield call(service.ApiGET, `personal-net-worth`);\n        yield put({ type: GET_DASHBOARD_DATA_SUCCESS, \n            payload: { assets, \n                cashFlow, \n                creditor, \n                expenditure, \n                income, \n                personalNetWorth \n            } \n        });\n        yield put({ type: LOADING_END })\n    } catch (error) {\n        yield put({ type: GET_DASHBOARD_DATA_FAILED });\n        yield put({ type: LOADING_END })\n    }\n}\n\n\nfunction* DashboardActionWatcher() {\n    yield takeLatest(GET_DASHBOARD_DATA_REQUEST, getDashboardData)\n}\n\nexport default DashboardActionWatcher","import { takeLatest, put, call, } from \"redux-saga/effects\";\nimport serviceUtls from '../services/serviceUtils'\nimport {\n    GET_CUSTOMER_SUCCESS,\n    GET_CUSTOMER_REQUEST,\n    LOADING_END,\n    LOADING_START,\n    GET_CUSTOMER_FAILED,\n    EDIT_CUSTOMER_REQUEST,\n    EDIT_CUSTOMER_SUCCESS,\n    EDIT_CUSTOMER_FAILED\n} from \"actions/actionConstants\";\nimport notify from 'views/utils/notification';\n\nlet service = new serviceUtls();\n\nfunction* getCustomer() {\n    try {\n        yield put({ type: LOADING_START })\n        let data = yield call(service.ApiGET, 'customer/me');\n        if (data.status === 'Success') {\n            yield put({ type: GET_CUSTOMER_SUCCESS, payload: { data: data.result } })\n        } else {\n            yield put({ type: GET_CUSTOMER_FAILED, payload: data.showMessage })\n        }\n        yield put({ type: LOADING_END });\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: GET_CUSTOMER_FAILED, payload: error })\n    }\n}\n\nfunction* editCustomer(payload) {\n    console.log(\"function*editCustomer -> payload\", payload)\n    try {\n        yield put({ type: LOADING_START });\n        let data = yield call(service.ApiPUT, `customer`, payload.data)\n        console.log(\"function*editCustomer -> data\", data)\n        yield put({ type: EDIT_CUSTOMER_SUCCESS });\n        yield put({ type: GET_CUSTOMER_REQUEST });\n        notify('success', 'Successfully Updated', 'Assets')\n    } catch (error) {\n        yield put({ type: LOADING_END })\n        yield put({ type: EDIT_CUSTOMER_FAILED, payload: error });\n        yield put({ type: GET_CUSTOMER_REQUEST });\n        notify('error', error, 'Editing Assets')\n    }\n}\n\nfunction* customerActionWatcher() {\n    yield takeLatest(GET_CUSTOMER_REQUEST, getCustomer)\n    yield takeLatest(EDIT_CUSTOMER_REQUEST, editCustomer)\n}\n\nexport default customerActionWatcher","import { all, takeLatest, put, select } from \"redux-saga/effects\";\nimport * as types from 'actions/actionConstants';\n\nimport authActionWatcher from './auth';\nimport assetsActionWatcher from './assets';\nimport incomeActionWatcher from './income';\nimport expenditureActionWatcher from './expenditure';\nimport creditorActionWatcher from './creditor';\nimport typesActionWatcher from './types';\nimport NetWorthActionWatcher from './netWorth';\nimport CashFlowActionWatcher from './cashFlow';\nimport DashboardActionWatcher from './dashboard';\nimport CustomerActionWatcher from './customer';\n\nfunction* ToggleModal(payload) {\n    let state = yield select();\n    if (state.modal.show) {\n        yield put({ type: types.CLOSE_MODAL, payload: { title: payload.title, show: false } })\n    } else {\n        yield put({ type: types.GET_TYPES_REQUEST, category: payload.title.toLowerCase() })\n        yield put({ type: types.OPEN_MODAL, payload: { title: payload.title, show: true, data: payload.data } })\n    }\n}\nfunction* actionWatcher() {\n    yield takeLatest(types.TOGGLE_MODAL, ToggleModal);\n}\n\nexport default function* rootSaga() {\n    yield all([\n        actionWatcher(),\n        authActionWatcher(),\n        assetsActionWatcher(),\n        incomeActionWatcher(),\n        expenditureActionWatcher(),\n        creditorActionWatcher(),\n        typesActionWatcher(),\n        NetWorthActionWatcher(),\n        CashFlowActionWatcher(),\n        DashboardActionWatcher(),\n        CustomerActionWatcher()\n    ])\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\n\nconst initialState = {};\nconst middleWare = createSagaMiddleware();\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(middleWare));\n\nmiddleWare.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/now-ui-dashboard.scss?v1.4.0\";\nimport \"assets/css/demo.css\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport Login from \"views/auth/login\";\nimport Register from \"views/auth/register\";\nimport ResetPwd from \"views/auth/resetpwd/resetPwd\"\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hist}>\n      <Switch>\n        <Route path=\"/auth/login\" render={(props) => <Login history={hist} {...props} />} />\n        <Route path=\"/auth/resetpwd\" component={ResetPwd} />\n        <Route path=\"/auth/register\" component={Register} />\n        <Route path=\"/\" render={(props) => <AdminLayout {...props} />} />\n        <Redirect to=\"/dashboard\" />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n    // BASE_URL: 'http://stagingelb-401302701.us-east-2.elb.amazonaws.com/api/'\n    BASE_URL: 'https://bean.ericdcashflow.com/api/'\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-gray.cdea773e.png\";"],"sourceRoot":""}